{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"children\", \"motionProps\", \"containerProps\"];\nimport { useDrawerContext } from \"./chunk-MCHDHFCQ.mjs\";\nimport { ModalFocusScope } from \"./chunk-NABYTFTG.mjs\";\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/drawer-content.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Slide } from \"@chakra-ui/transition\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(Slide);\nvar DrawerContent = forwardRef(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    motionProps = props.motionProps,\n    rootProps = props.containerProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    getDialogProps = _useModalContext.getDialogProps,\n    getDialogContainerProps = _useModalContext.getDialogContainerProps,\n    isOpen = _useModalContext.isOpen;\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n  var _className = cx(\"chakra-modal__content\", className);\n  var styles = useModalStyles();\n  var dialogStyles = _objectSpread({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n  var dialogContainerStyles = _objectSpread({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n  var _useDrawerContext = useDrawerContext(),\n    placement = _useDrawerContext.placement;\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, containerProps), {}, {\n      className: \"chakra-modal__content-container\",\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(MotionDiv, _objectSpread(_objectSpread({\n        motionProps: motionProps,\n        direction: placement,\n        in: isOpen,\n        className: _className\n      }, dialogProps), {}, {\n        __css: dialogStyles,\n        children: children\n      }))\n    }))\n  });\n});\nDrawerContent.displayName = \"DrawerContent\";\nexport { DrawerContent };","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SAASA,UAAU;AACnB,SACEC,QACAC,kBAGK;AACP,SAASC,aAAa;AAwEZ;AAjEV,IAAMC,YAAYH,OAAOE,KAAK;AAiBvB,IAAME,gBAAgBH,WAC3B,UAACI,OAAOC,KAAQ;EACd,IACEC,YAKEF,MALFE;IACAC,WAIEH,MAJFG;IACAC,cAGEJ,MAHFI;IACgBC,YAEdL,MAFFM;IACGC,gCACDP;EAEJ,uBACEQ,gBAAgB;IADVC;IAAgBC;IAAyBC;EAGjD,IAAMC,cAAcH,eAAeF,MAAMN,GAAG;EAC5C,IAAMK,iBAAiBI,wBAAwBL,SAAS;EAExD,IAAMQ,aAAanB,GAAG,yBAAyBQ,SAAS;EAExD,IAAMY,SAASC,eAAe;EAE9B,IAAMC;IACJC,SAAS;IACTC,eAAe;IACfC,UAAU;IACVC,OAAO;IACPC,SAAS;EAAA,GACNP,OAAOQ,OACZ;EAEA,IAAMC;IACJN,SAAS;IACTG,OAAO;IACPI,QAAQ;IACRL,UAAU;IACVM,MAAM;IACNC,KAAK;EAAA,GACFZ,OAAOa,gBACZ;EAEA,wBAAsBC,iBAAiB;IAA/BC;EAER,OACE,mBAACC;IACC3B,6BAACR,OAAOoC,qCACFzB;MACJJ,WAAU;MACV8B,OAAOT;MAEPpB,6BAACL;QACCM;QACA6B,WAAWJ;QACXK,IAAIvB;QACJT,WAAWW;MAAA,GACPD;QACJoB,OAAOhB;QAENb;MAAA,EACH;IAAA,EACF;EAAA,CACF;AAEJ,CACF;AAEAJ,cAAcoC,cAAc","names":["cx","chakra","forwardRef","Slide","MotionDiv","DrawerContent","props","ref","className","children","motionProps","rootProps","containerProps","rest","useModalContext","getDialogProps","getDialogContainerProps","isOpen","dialogProps","_className","styles","useModalStyles","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","useDrawerContext","placement","ModalFocusScope","div","__css","direction","in","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\modal\\src\\drawer-content.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { Slide } from \"@chakra-ui/transition\"\nimport type { HTMLMotionProps } from \"framer-motion\"\n\nimport { useDrawerContext } from \"./drawer\"\nimport { useModalContext, useModalStyles } from \"./modal\"\nimport { ModalFocusScope } from \"./modal-focus\"\n\nconst MotionDiv = chakra(Slide)\n\nexport interface DrawerContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n  /**\n   * The custom framer-motion transition to use for the modal\n   */\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const DrawerContent = forwardRef<DrawerContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      motionProps,\n      containerProps: rootProps,\n      ...rest\n    } = props\n\n    const { getDialogProps, getDialogContainerProps, isOpen } =\n      useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useModalStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { placement } = useDrawerContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          __css={dialogContainerStyles}\n        >\n          <MotionDiv\n            motionProps={motionProps}\n            direction={placement}\n            in={isOpen}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </MotionDiv>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nDrawerContent.displayName = \"DrawerContent\"\n"]},"metadata":{},"sourceType":"module"}