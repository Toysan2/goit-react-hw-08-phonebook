{"ast":null,"code":"'use client';\n\n// src/slider-utils.ts\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nfunction getIds(id) {\n  return {\n    root: \"slider-root-\".concat(id),\n    getThumb: function getThumb(i) {\n      return \"slider-thumb-\".concat(id, \"-\").concat(i);\n    },\n    getInput: function getInput(i) {\n      return \"slider-input-\".concat(id, \"-\").concat(i);\n    },\n    track: \"slider-track-\".concat(id),\n    innerTrack: \"slider-filled-track-\".concat(id),\n    getMarker: function getMarker(i) {\n      return \"slider-marker-\".concat(id, \"-\").concat(i);\n    },\n    output: \"slider-output-\".concat(id)\n  };\n}\nfunction orient(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\nvar normalize = function normalize(a) {\n  return a || zeroSize;\n};\nfunction getStyles(options) {\n  var orientation = options.orientation,\n    thumbPercents = options.thumbPercents,\n    thumbRects = options.thumbRects,\n    isReversed = options.isReversed;\n  var getThumbStyle = function getThumbStyle(i) {\n    var _a;\n    var rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return _objectSpread({\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.height / 2, \"px)\")\n      },\n      horizontal: {\n        left: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.width / 2, \"px)\")\n      }\n    }));\n  };\n  var size = orientation === \"vertical\" ? thumbRects.reduce(function (a, b) {\n    return normalize(a).height > normalize(b).height ? a : b;\n  }, zeroSize) : thumbRects.reduce(function (a, b) {\n    return normalize(a).width > normalize(b).width ? a : b;\n  }, zeroSize);\n  var rootStyle = _objectSpread({\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  }, orient({\n    orientation: orientation,\n    vertical: size ? {\n      paddingLeft: size.width / 2,\n      paddingRight: size.width / 2\n    } : {},\n    horizontal: size ? {\n      paddingTop: size.height / 2,\n      paddingBottom: size.height / 2\n    } : {}\n  }));\n  var trackStyle = _objectSpread({\n    position: \"absolute\"\n  }, orient({\n    orientation: orientation,\n    vertical: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      height: \"100%\"\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"100%\"\n    }\n  }));\n  var isSingleThumb = thumbPercents.length === 1;\n  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  var range = isSingleThumb ? fallback : thumbPercents;\n  var start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  var percent = Math.abs(range[range.length - 1] - range[0]);\n  var innerTrackStyle = _objectSpread(_objectSpread({}, trackStyle), orient({\n    orientation: orientation,\n    vertical: isReversed ? {\n      height: \"\".concat(percent, \"%\"),\n      top: \"\".concat(start, \"%\")\n    } : {\n      height: \"\".concat(percent, \"%\"),\n      bottom: \"\".concat(start, \"%\")\n    },\n    horizontal: isReversed ? {\n      width: \"\".concat(percent, \"%\"),\n      right: \"\".concat(start, \"%\")\n    } : {\n      width: \"\".concat(percent, \"%\"),\n      left: \"\".concat(start, \"%\")\n    }\n  }));\n  return {\n    trackStyle: trackStyle,\n    innerTrackStyle: innerTrackStyle,\n    rootStyle: rootStyle,\n    getThumbStyle: getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  var isReversed = options.isReversed,\n    direction = options.direction,\n    orientation = options.orientation;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\nexport { getIds, orient, getStyles, getIsReversed };","map":{"version":3,"mappings":"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","names":["getIds","id","root","getThumb","i","getInput","track","innerTrack","getMarker","output","orient","options","orientation","vertical","horizontal","zeroSize","width","height","normalize","a","getStyles","thumbPercents","thumbRects","isReversed","getThumbStyle","rect","_a","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","bottom","left","size","reduce","b","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","isSingleThumb","length","fallback","range","start","percent","Math","abs","innerTrackStyle","right","getIsReversed","direction"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\slider\\src\\slider-utils.ts"],"sourcesContent":["export function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroSize: Size = { width: 0, height: 0 }\n\nconst normalize = (a: Size | undefined) => a || zeroSize\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Array<Size | undefined>\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): React.CSSProperties => {\n    const rect = thumbRects[i] ?? zeroSize\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`,\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`,\n        },\n      }),\n    }\n  }\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce(\n          (a, b) => (normalize(a).height > normalize(b).height ? a : b),\n          zeroSize,\n        )\n      : thumbRects.reduce(\n          (a, b) => (normalize(a).width > normalize(b).width ? a : b),\n          zeroSize,\n        )\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size\n        ? {\n            paddingLeft: size.width / 2,\n            paddingRight: size.width / 2,\n          }\n        : {},\n      horizontal: size\n        ? {\n            paddingTop: size.height / 2,\n            paddingBottom: size.height / 2,\n          }\n        : {},\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved 🔜  otherwise  🔚\n  return !isReversed\n}\n"]},"metadata":{},"sourceType":"module"}