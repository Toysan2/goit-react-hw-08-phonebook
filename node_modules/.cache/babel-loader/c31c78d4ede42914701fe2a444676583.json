{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"size\", \"shadowColor\", \"bg\", \"style\"];\nimport { innerArrow, matchWidth, positionArrow, transformOrigin } from \"./chunk-P4KPSAOW.mjs\";\nimport { getPopperPlacement } from \"./chunk-AUJXXV3B.mjs\";\nimport { cssVars, getEventListenerOptions } from \"./chunk-6WT2JRWX.mjs\";\n\n// src/use-popper.ts\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction usePopper() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$enabled = props.enabled,\n    enabled = _props$enabled === void 0 ? true : _props$enabled,\n    modifiers = props.modifiers,\n    _props$placement = props.placement,\n    placementProp = _props$placement === void 0 ? \"bottom\" : _props$placement,\n    _props$strategy = props.strategy,\n    strategy = _props$strategy === void 0 ? \"absolute\" : _props$strategy,\n    _props$arrowPadding = props.arrowPadding,\n    arrowPadding = _props$arrowPadding === void 0 ? 8 : _props$arrowPadding,\n    _props$eventListeners = props.eventListeners,\n    eventListeners = _props$eventListeners === void 0 ? true : _props$eventListeners,\n    offset = props.offset,\n    _props$gutter = props.gutter,\n    gutter = _props$gutter === void 0 ? 8 : _props$gutter,\n    _props$flip = props.flip,\n    flip = _props$flip === void 0 ? true : _props$flip,\n    _props$boundary = props.boundary,\n    boundary = _props$boundary === void 0 ? \"clippingParents\" : _props$boundary,\n    _props$preventOverflo = props.preventOverflow,\n    preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n    matchWidth2 = props.matchWidth,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"ltr\" : _props$direction;\n  var reference = useRef(null);\n  var popper = useRef(null);\n  var instance = useRef(null);\n  var placement = getPopperPlacement(placementProp, direction);\n  var cleanup = useRef(function () {});\n  var setupPopper = useCallback(function () {\n    var _a;\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placement,\n      modifiers: [innerArrow, positionArrow, transformOrigin, _objectSpread(_objectSpread({}, matchWidth), {}, {\n        enabled: !!matchWidth2\n      }), _objectSpread({\n        name: \"eventListeners\"\n      }, getEventListenerOptions(eventListeners)), {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary: boundary\n        }\n      }].concat(_toConsumableArray(modifiers != null ? modifiers : [])),\n      strategy: strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth2, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(function () {\n    return function () {\n      var _a;\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  var referenceRef = useCallback(function (node) {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getReferenceProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(referenceRef, ref)\n    });\n  }, [referenceRef]);\n  var popperRef = useCallback(function (node) {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getPopperProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(popperRef, ref),\n      style: _objectSpread(_objectSpread({}, props2.style), {}, {\n        position: strategy,\n        minWidth: matchWidth2 ? void 0 : \"max-content\",\n        inset: \"0 auto auto 0\"\n      })\n    });\n  }, [strategy, popperRef, matchWidth2]);\n  var getArrowProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var size = props2.size,\n      shadowColor = props2.shadowColor,\n      bg = props2.bg,\n      style = props2.style,\n      rest = _objectWithoutProperties(props2, _excluded);\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props2)\n    });\n  }, []);\n  var getArrowInnerProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      \"data-popper-arrow-inner\": \"\"\n    });\n  }, []);\n  return {\n    update: function update() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate: function forceUpdate() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef: referenceRef,\n    popperRef: popperRef,\n    getPopperProps: getPopperProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getReferenceProps: getReferenceProps\n  };\n}\nfunction getArrowStyle(props) {\n  var size = props.size,\n    shadowColor = props.shadowColor,\n    bg = props.bg,\n    style = props.style;\n  var computedStyle = _objectSpread(_objectSpread({}, style), {}, {\n    position: \"absolute\"\n  });\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n  return computedStyle;\n}\nexport { usePopper };","map":{"version":3,"mappings":"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","names":["mergeRefs","createPopper","useCallback","useEffect","useRef","usePopper","props","enabled","modifiers","_props$placement","placement","placementProp","_props$strategy","strategy","_props$arrowPadding","arrowPadding","_props$eventListeners","eventListeners","offset","_props$gutter","gutter","_props$flip","flip","_props$boundary","boundary","_props$preventOverflo","preventOverflow","matchWidth","_props$direction","direction","reference","popper","instance","getPopperPlacement","cleanup","setupPopper","current","innerArrow","positionArrow","transformOrigin","name","getEventListenerOptions","options","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","ref","popperRef","getPopperProps","style","position","minWidth","inset","getArrowProps","size","shadowColor","bg","rest","getArrowStyle","getArrowInnerProps","update","cssVars","varRef","computedStyle"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\popper\\src\\use-popper.ts"],"sourcesContent":["import { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of the popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it, so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        {\n          ...customModifiers.matchWidth,\n          enabled: !!matchWidth,\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  const getArrowProps: PropGetter = useCallback((props = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props),\n    }\n  }, [])\n\n  const getArrowInnerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}