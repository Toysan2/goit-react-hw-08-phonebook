{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"icon\", \"iconSpacing\"];\nimport { StyledMenuItem } from \"./chunk-M565QO7N.mjs\";\nimport { MenuIcon } from \"./chunk-HB6KBUMZ.mjs\";\nimport { useMenuOption } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-item-option.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CheckIcon = function CheckIcon(props) {\n  return /* @__PURE__ */jsx(\"svg\", _objectSpread(_objectSpread({\n    viewBox: \"0 0 14 14\",\n    width: \"1em\",\n    height: \"1em\"\n  }, props), {}, {\n    children: /* @__PURE__ */jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    })\n  }));\n};\nvar MenuItemOption = forwardRef(function (props, ref) {\n  var icon = props.icon,\n    _props$iconSpacing = props.iconSpacing,\n    iconSpacing = _props$iconSpacing === void 0 ? \"0.75rem\" : _props$iconSpacing,\n    rest = _objectWithoutProperties(props, _excluded);\n  var optionProps = useMenuOption(rest, ref);\n  return /* @__PURE__ */jsxs(StyledMenuItem, _objectSpread(_objectSpread({}, optionProps), {}, {\n    className: cx(\"chakra-menu__menuitem-option\", rest.className),\n    children: [icon !== null && /* @__PURE__ */jsx(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      opacity: props.isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */jsx(CheckIcon, {})\n    }), /* @__PURE__ */jsx(\"span\", {\n      style: {\n        flex: 1\n      },\n      children: optionProps.children\n    })]\n  }));\n});\nMenuItemOption.id = \"MenuItemOption\";\nMenuItemOption.displayName = \"MenuItemOption\";\nexport { MenuItemOption };","map":{"version":3,"mappings":";;;;;;;;;;AACA,SAASA,kBAAwC;AAMjD,SAASC,UAAU;AAIf,cA4BEC,YA5BF;AAFJ,IAAMC,YAAsC,SAAtCA,UAAuCC;EAAA,OAC3C,mBAAC;IAAIC,SAAQ;IAAYC,OAAM;IAAMC,QAAO;EAAA,GAAUH;IACpDI,6BAAC;MACCC,MAAK;MACLC,QAAO;IAAA,CACT;EAAA,EACF;AAAA;AAgBK,IAAMC,iBAAiBX,WAC5B,UAACI,OAAOQ,KAAQ;EAEd,IAAQC,OAA2CT,MAA3CS;IAAAC,qBAA2CV,MAArCW;IAAAA,8CAAc;IAAcC,gCAASZ;EAEnD,IAAMa,cAAcC,cAAcF,MAAMJ,GAAG;EAE3C,OACE,oBAACO,gDACKF;IACJG,WAAWnB,GAAG,gCAAgCe,KAAKI,SAAS;IAE3DZ,oBAAS,QACR,mBAACa;MACCC,UAAS;MACTC,WAAWR;MACXS,SAASpB,MAAMqB,YAAY,IAAI;MAE9BjB,kBAAQ,mBAACL,aAAU;IAAA,CACtB,GAEF,mBAAC;MAAKuB,OAAO;QAAEC,MAAM;MAAE;MAAInB,sBAAYA;IAAA,CAAS;EAAA,EAClD;AAEJ,CACF;AAEAG,eAAeiB,KAAK;AAEpBjB,eAAekB,cAAc","names":["forwardRef","cx","jsxs","CheckIcon","props","viewBox","width","height","children","fill","points","MenuItemOption","ref","icon","_props$iconSpacing","iconSpacing","rest","optionProps","useMenuOption","StyledMenuItem","className","MenuIcon","fontSize","marginEnd","opacity","isChecked","style","flex","id","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\menu\\src\\menu-item-option.tsx"],"sourcesContent":["import { HTMLAttributes, ReactElement } from \"react\"\nimport { forwardRef, PropsOf, SystemProps } from \"@chakra-ui/system\"\n\nimport { MenuItemProps } from \"./menu-item\"\nimport { useMenuOption, UseMenuOptionOptions } from \"./use-menu\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions | \"icon\"> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: ReactElement | null\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    // menu option item should always be `type=button`, so we omit `type`\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes<HTMLElement>\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        {icon !== null && (\n          <MenuIcon\n            fontSize=\"0.8em\"\n            marginEnd={iconSpacing}\n            opacity={props.isChecked ? 1 : 0}\n          >\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        )}\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nMenuItemOption.displayName = \"MenuItemOption\"\n"]},"metadata":{},"sourceType":"module"}