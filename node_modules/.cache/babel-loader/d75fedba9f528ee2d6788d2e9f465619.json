{"ast":null,"code":"'use client';\n\nimport _defineProperty from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { cssVars, getBoxShadow, toTransformOrigin } from \"./chunk-6WT2JRWX.mjs\";\n\n// src/modifiers.ts\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: function fn(_ref) {\n    var state = _ref.state;\n    state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n  },\n  effect: function effect(_ref2) {\n    var state = _ref2.state;\n    return function () {\n      var reference = state.elements.reference;\n      state.elements.popper.style.width = \"\".concat(reference.offsetWidth, \"px\");\n    };\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: function fn(_ref3) {\n    var state = _ref3.state;\n    setTransformOrigin(state);\n  },\n  effect: function effect(_ref4) {\n    var state = _ref4.state;\n    return function () {\n      setTransformOrigin(state);\n    };\n  }\n};\nvar setTransformOrigin = function setTransformOrigin(state) {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: function fn(_ref5) {\n    var state = _ref5.state;\n    setArrowStyles(state);\n  }\n};\nvar setArrowStyles = function setArrowStyles(state) {\n  var _a;\n  if (!state.placement) return;\n  var overrides = getArrowStyle(state.placement);\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    var _Object$assign, _vars;\n    Object.assign(state.elements.arrow.style, (_Object$assign = {}, _defineProperty(_Object$assign, overrides.property, overrides.value), _defineProperty(_Object$assign, \"width\", cssVars.arrowSize.varRef), _defineProperty(_Object$assign, \"height\", cssVars.arrowSize.varRef), _defineProperty(_Object$assign, \"zIndex\", -1), _Object$assign));\n    var vars = (_vars = {}, _defineProperty(_vars, cssVars.arrowSizeHalf.var, \"calc(\".concat(cssVars.arrowSize.varRef, \" / 2 - 1px)\")), _defineProperty(_vars, cssVars.arrowOffset.var, \"calc(\".concat(cssVars.arrowSizeHalf.varRef, \" * -1)\")), _vars);\n    for (var property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\nvar getArrowStyle = function getArrowStyle(placement) {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: function fn(_ref6) {\n    var state = _ref6.state;\n    setInnerArrowStyles(state);\n  },\n  effect: function effect(_ref7) {\n    var state = _ref7.state;\n    return function () {\n      setInnerArrowStyles(state);\n    };\n  }\n};\nvar setInnerArrowStyles = function setInnerArrowStyles(state) {\n  if (!state.elements.arrow) return;\n  var inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  var boxShadow = getBoxShadow(state.placement);\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow);\n  }\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: \"var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))\"\n  });\n};\nexport { matchWidth, transformOrigin, positionArrow, innerArrow };","map":{"version":3,"mappings":"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","names":["matchWidth","name","enabled","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","transformOrigin","setTransformOrigin","setProperty","cssVars","var","toTransformOrigin","placement","positionArrow","setArrowStyles","overrides","getArrowStyle","_a","arrow","Object","assign","property","value","arrowSize","varRef","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","boxShadow","getBoxShadow","transform","background","arrowBg","top","left","height","position","zIndex"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\popper\\src\\modifiers.ts"],"sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}