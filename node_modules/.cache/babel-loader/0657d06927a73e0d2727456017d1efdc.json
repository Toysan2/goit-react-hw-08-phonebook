{"ast":null,"code":"'use client';\n\n// src/portal-manager.tsx\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    strict: false,\n    name: \"PortalManagerContext\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  PortalManagerContextProvider = _createContext2[0],\n  usePortalManager = _createContext2[1];\nfunction PortalManager(props) {\n  var children = props.children,\n    zIndex = props.zIndex;\n  return /* @__PURE__ */jsx(PortalManagerContextProvider, {\n    value: {\n      zIndex: zIndex\n    },\n    children: children\n  });\n}\nPortalManager.displayName = \"PortalManager\";\nexport { usePortalManager, PortalManager };","map":{"version":3,"mappings":";;;;AAAA,SAASA,qBAAqB;AA0B1B;AApBJ,qBACEA,cAA2C;IACzCC,QAAQ;IACRC,MAAM;EACR,CAAC;EAAAC;EAJIC;EAA8BC,gBAAgB;AAiB9C,SAASC,cAAcC,OAA2B;EACvD,IAAQC,WAAqBD,MAArBC;IAAUC,SAAWF,MAAXE;EAClB,OACE,mBAACL;IAA6BM,OAAO;MAAED;IAAO;IAC3CD;EAAA,CACH;AAEJ;AAEAF,cAAcK,cAAc","names":["createContext","strict","name","_createContext2","PortalManagerContextProvider","usePortalManager","PortalManager","props","children","zIndex","value","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\portal\\src\\portal-manager.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\n\ninterface PortalManagerContext {\n  zIndex?: number\n}\n\nconst [PortalManagerContextProvider, usePortalManager] =\n  createContext<PortalManagerContext | null>({\n    strict: false,\n    name: \"PortalManagerContext\",\n  })\n\nexport { usePortalManager }\n\nexport interface PortalManagerProps {\n  children?: React.ReactNode\n  /**\n   * [Z-Index war] If your has multiple elements\n   * with z-index clashing, you might need to apply a z-index to the Portal manager\n   */\n  zIndex?: number\n}\n\nexport function PortalManager(props: PortalManagerProps) {\n  const { children, zIndex } = props\n  return (\n    <PortalManagerContextProvider value={{ zIndex }}>\n      {children}\n    </PortalManagerContextProvider>\n  )\n}\n\nPortalManager.displayName = \"PortalManager\"\n"]},"metadata":{},"sourceType":"module"}