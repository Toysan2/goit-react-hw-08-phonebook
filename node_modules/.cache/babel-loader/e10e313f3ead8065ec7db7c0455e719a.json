{"ast":null,"code":"'use client';\n\n// src/control-box.tsx\nimport _defineProperty from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"];\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ControlBox = function ControlBox(props) {\n  var _css;\n  var _props$type = props.type,\n    type = _props$type === void 0 ? \"checkbox\" : _props$type,\n    _hover = props._hover,\n    _invalid = props._invalid,\n    _disabled = props._disabled,\n    _focus = props._focus,\n    _checked = props._checked,\n    _props$_child = props._child,\n    _child = _props$_child === void 0 ? {\n      opacity: 0\n    } : _props$_child,\n    _props$_checkedAndChi = props._checkedAndChild,\n    _checkedAndChild = _props$_checkedAndChi === void 0 ? {\n      opacity: 1\n    } : _props$_checkedAndChi,\n    _checkedAndDisabled = props._checkedAndDisabled,\n    _checkedAndFocus = props._checkedAndFocus,\n    _checkedAndHover = props._checkedAndHover,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var checkedAndDisabled = \"input[type=\".concat(type, \"]:checked:disabled + &\");\n  var checkedAndHover = \"input[type=\".concat(type, \"]:checked:hover:not(:disabled) + &\");\n  var checkedAndFocus = \"input[type=\".concat(type, \"]:checked:focus + &\");\n  var disabled = \"input[type=\".concat(type, \"]:disabled + &\");\n  var focus = \"input[type=\".concat(type, \"]:focus + &\");\n  var hover = \"input[type=\".concat(type, \"]:hover:not(:disabled):not(:checked) + &\");\n  var checked = \"input[type=\".concat(type, \"]:checked + &, input[type=\").concat(type, \"][aria-checked=mixed] + &\");\n  var invalid = \"input[type=\".concat(type, \"][aria-invalid=true] + &\");\n  var child = \"& > *\";\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, rest), {}, {\n    \"aria-hidden\": true,\n    __css: (_css = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0\n    }, _defineProperty(_css, focus, _focus), _defineProperty(_css, hover, _hover), _defineProperty(_css, disabled, _disabled), _defineProperty(_css, invalid, _invalid), _defineProperty(_css, checkedAndDisabled, _checkedAndDisabled), _defineProperty(_css, checkedAndFocus, _checkedAndFocus), _defineProperty(_css, checkedAndHover, _checkedAndHover), _defineProperty(_css, child, _child), _defineProperty(_css, checked, _objectSpread(_objectSpread({}, _checked), {}, _defineProperty({}, child, _checkedAndChild))), _css),\n    children: children\n  }));\n};\nControlBox.displayName = \"ControlBox\";\nvar control_box_default = ControlBox;\nexport { ControlBox, control_box_default };","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,cAAkD;AAsDvD;AA5BG,IAAMC,aAAwC,SAAxCA,WAAyCC,OAAU;EAAA;EAC9D,kBAcIA,MAbFC;IAAAA,gCAAO;IACPC,SAYEF,MAZFE;IACAC,WAWEH,MAXFG;IACAC,YAUEJ,MAVFI;IACAC,SASEL,MATFK;IACAC,WAQEN,MARFM;IAAAC,gBAQEP,MAPFQ;IAAAA,oCAAS;MAAEC,SAAS;IAAE;IAAAC,wBAOpBV,MANFW;IAAAA,sDAAmB;MAAEF,SAAS;IAAE;IAChCG,sBAKEZ,MALFY;IACAC,mBAIEb,MAJFa;IACAC,mBAGEd,MAHFc;IACAC,WAEEf,MAFFe;IACGC,gCACDhB;EAEJ,IAAMiB,0CAAmChB;EACzC,IAAMiB,uCAAgCjB;EACtC,IAAMkB,uCAAgClB;EACtC,IAAMmB,gCAAyBnB;EAC/B,IAAMoB,6BAAsBpB;EAC5B,IAAMqB,6BAAsBrB;EAC5B,IAAMsB,+BAAwBtB,2CAAiCA;EAC/D,IAAMuB,+BAAwBvB;EAC9B,IAAMwB,eAAQ;EAEd,OACE,mBAAC3B,OAAO4B,qCACFV;IACJ,eAAW;IACXW;MACEC,SAAS;MACTC,YAAY;MACZC,gBAAgB;MAChBC,oBAAoB;MACpBC,oBAAoB;MACpBC,YAAY;IAAA,yBACXZ,KAAK,EAAGhB,+BACRiB,KAAK,EAAGpB,+BACRkB,QAAQ,EAAGhB,kCACXoB,OAAO,EAAGrB,iCACVc,kBAAkB,EAAGL,4CACrBO,eAAe,EAAGN,yCAClBK,eAAe,EAAGJ,yCAClBW,KAAK,EAAGjB,+BACRe,OAAO,kCACHjB,mCACFmB,KAAK,EAAGd,0BAEb;IAECI;EAAA,EACH;AAEJ;AAEAhB,WAAWmC,cAAc;AAEzB,IAAOC,sBAAQpC","names":["chakra","ControlBox","props","type","_hover","_invalid","_disabled","_focus","_checked","_props$_child","_child","opacity","_props$_checkedAndChi","_checkedAndChild","_checkedAndDisabled","_checkedAndFocus","_checkedAndHover","children","rest","checkedAndDisabled","checkedAndHover","checkedAndFocus","disabled","focus","hover","checked","invalid","child","div","__css","display","alignItems","justifyContent","transitionProperty","transitionDuration","flexShrink","displayName","control_box_default"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\control-box\\src\\control-box.tsx"],"sourcesContent":["import { chakra, SystemStyleObject, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface ControlBoxOptions {\n  type?: \"checkbox\" | \"radio\"\n  _hover?: SystemStyleObject\n  _invalid?: SystemStyleObject\n  _disabled?: SystemStyleObject\n  _focus?: SystemStyleObject\n  _checked?: SystemStyleObject\n  _child?: SystemStyleObject\n  _checkedAndChild?: SystemStyleObject\n  _checkedAndDisabled?: SystemStyleObject\n  _checkedAndFocus?: SystemStyleObject\n  _checkedAndHover?: SystemStyleObject\n}\n\nexport type IControlBox = ControlBoxOptions\n\ninterface BaseControlProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof ControlBoxOptions> {}\n\nexport interface ControlBoxProps extends BaseControlProps, ControlBoxOptions {}\n\n/**\n * @deprecated This component will be removed in the next major release.\n */\nexport const ControlBox: React.FC<ControlBoxProps> = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props\n\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`\n  const disabled = `input[type=${type}]:disabled + &`\n  const focus = `input[type=${type}]:focus + &`\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`\n  const invalid = `input[type=${type}][aria-invalid=true] + &`\n  const child = `& > *`\n\n  return (\n    <chakra.div\n      {...rest}\n      aria-hidden\n      __css={{\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transitionProperty: \"common\",\n        transitionDuration: \"fast\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: {\n          ..._checked,\n          [child]: _checkedAndChild,\n        },\n      }}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nControlBox.displayName = \"ControlBox\"\n\nexport default ControlBox\n"]},"metadata":{},"sourceType":"module"}