{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"isCurrentPage\", \"as\", \"className\", \"href\"];\nimport { useBreadcrumbStyles } from \"./chunk-24NX3CUR.mjs\";\n\n// src/breadcrumb-link.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar BreadcrumbLink = forwardRef(function BreadcrumbLink2(props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    as = props.as,\n    className = props.className,\n    href = props.href,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = useBreadcrumbStyles();\n  var sharedProps = _objectSpread({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /* @__PURE__ */jsx(chakra.span, _objectSpread({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /* @__PURE__ */jsx(chakra.a, _objectSpread({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\nexport { BreadcrumbLink };","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,QAAQC,kBAAmC;AACpD,SAASC,UAAU;AA8BX;AAdD,IAAMC,iBAAiBF,WAC5B,SAASE,gBAAeC,OAAOC,KAAK;EAClC,IAAQC,gBAAgDF,MAAhDE;IAAeC,KAAiCH,MAAjCG;IAAIC,YAA6BJ,MAA7BI;IAAWC,OAAkBL,MAAlBK;IAASC,gCAASN;EACxD,IAAMO,SAASC,oBAAoB;EAEnC,IAAMC;IACJR;IACAE;IACAC,WAAWN,GAAG,2BAA2BM,SAAS;EAAA,GAC/CE,KACL;EAEA,IAAIJ,eAAe;IACjB,OACE,mBAACN,OAAOc;MAAK,gBAAa;MAAOC,OAAOJ,OAAOK;IAAA,GAAUH,YAAa;EAE1E;EAEA,OAAO,mBAACb,OAAOiB;IAAEF,OAAOJ,OAAOK;IAAMP;EAAA,GAAgBI,YAAa;AACpE,CACF;AACAV,eAAee,cAAc","names":["chakra","forwardRef","cx","BreadcrumbLink","props","ref","isCurrentPage","as","className","href","rest","styles","useBreadcrumbStyles","sharedProps","span","__css","link","a","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\breadcrumb\\src\\breadcrumb-link.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useBreadcrumbStyles } from \"./breadcrumb-context\"\n\nexport interface BreadcrumbLinkProps extends HTMLChakraProps<\"a\"> {\n  /**\n   * @default false\n   */\n  isCurrentPage?: boolean\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  function BreadcrumbLink(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props\n    const styles = useBreadcrumbStyles()\n\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest,\n    }\n\n    if (isCurrentPage) {\n      return (\n        <chakra.span aria-current=\"page\" __css={styles.link} {...sharedProps} />\n      )\n    }\n\n    return <chakra.a __css={styles.link} href={href} {...sharedProps} />\n  },\n)\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n"]},"metadata":{},"sourceType":"module"}