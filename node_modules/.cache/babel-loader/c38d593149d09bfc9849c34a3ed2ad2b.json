{"ast":null,"code":"'use client';\n\n// src/badge.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = forwardRef(function Badge2(props, ref) {\n  var styles = useStyleConfig(\"Badge\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    ref: ref,\n    className: cx(\"chakra-badge\", props.className)\n  }, rest), {}, {\n    __css: _objectSpread({\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\"\n    }, styles)\n  }));\n});\nBadge.displayName = \"Badge\";\nexport { Badge };","map":{"version":3,"mappings":";;;;;;AAAA,SACEA,QACAC,YACAC,kBAEAC,sBAEK;AACP,SAASC,UAAU;AAiBf;AALG,IAAMC,QAAQJ,WAA+B,SAASI,OAAMC,OAAOC,KAAK;EAC7E,IAAMC,SAASL,eAAe,SAASG,KAAK;EAC5C,wBAA+BJ,iBAAiBI,KAAK;IAA7CG;IAAcC;EAEtB,OACE,mBAACV,OAAOW;IACNJ;IACAE,WAAWL,GAAG,gBAAgBE,MAAMG,SAAS;EAAA,GACzCC;IACJE;MACEC,SAAS;MACTC,YAAY;MACZC,eAAe;IAAA,GACZP;EACL,EACF;AAEJ,CAAC;AAEDH,MAAMW,cAAc","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","Badge","props","ref","styles","className","rest","span","__css","display","whiteSpace","verticalAlign","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\badge.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface BadgeProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Badge\"> {}\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/badge\n */\nexport const Badge = forwardRef<BadgeProps, \"span\">(function Badge(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.span\n      ref={ref}\n      className={cx(\"chakra-badge\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nBadge.displayName = \"Badge\"\n"]},"metadata":{},"sourceType":"module"}