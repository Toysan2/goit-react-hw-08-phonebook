{"ast":null,"code":"'use client';\n\n// src/grid-item.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"area\", \"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"];\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \".concat(value, \"/span \").concat(value);\n  });\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  var area = props.area,\n    colSpan = props.colSpan,\n    colStart = props.colStart,\n    colEnd = props.colEnd,\n    rowEnd = props.rowEnd,\n    rowSpan = props.rowSpan,\n    rowStart = props.rowStart,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\nGridItem.displayName = \"GridItem\";\nexport { GridItem };","map":{"version":3,"mappings":";;;;;;AAAA,SAGEA,YACAC,cACK;AACP,SAASC,eAAe;AACxB,SAASC,qBAAqB;AAqErB;AA/BT,SAASC,OAAOC,MAAyC;EACvD,OAAOF,cAAcE,MAAM,UAACC;IAAA,OAC1BA,UAAU,SAAS,wBAAiBA,KAAK,mBAASA,KAAK;EAAA,CACzD;AACF;AAEO,IAAMC,WAAWP,WAAiC,SAASO,UAChEC,OACAC,KACA;EACA,IACEC,OAQEF,MARFE;IACAC,UAOEH,MAPFG;IACAC,WAMEJ,MANFI;IACAC,SAKEL,MALFK;IACAC,SAIEN,MAJFM;IACAC,UAGEP,MAHFO;IACAC,WAEER,MAFFQ;IACGC,gCACDT;EAEJ,IAAMU,SAAShB,QAAQ;IACrBiB,UAAUT;IACVU,YAAYhB,OAAOO,OAAO;IAC1BU,SAASjB,OAAOW,OAAO;IACvBO,iBAAiBV;IACjBW,eAAeV;IACfW,cAAcR;IACdS,YAAYX;EACd,CAAC;EAED,OAAO,mBAACb,OAAOyB;IAAIjB;IAAUkB,OAAOT;EAAA,GAAYD,KAAM;AACxD,CAAC;AAEDV,SAASqB,cAAc","names":["forwardRef","chakra","compact","mapResponsive","spanFn","span","value","GridItem","props","ref","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","styles","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","div","__css","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\grid-item.tsx"],"sourcesContent":["import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n"]},"metadata":{},"sourceType":"module"}