{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"unmountOnExit\", \"in\", \"reverse\", \"className\", \"offsetX\", \"offsetY\", \"transition\", \"transitionEnd\", \"delay\"];\nimport { TRANSITION_DEFAULTS, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/slide-fade.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  initial: function initial(_ref) {\n    var offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      delay = _ref.delay;\n    var _a;\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: function enter(_ref2) {\n    var transition = _ref2.transition,\n      transitionEnd = _ref2.transitionEnd,\n      delay = _ref2.delay;\n    var _a;\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit(_ref3) {\n    var offsetY = _ref3.offsetY,\n      offsetX = _ref3.offsetX,\n      transition = _ref3.transition,\n      transitionEnd = _ref3.transitionEnd,\n      reverse = _ref3.reverse,\n      delay = _ref3.delay;\n    var _a;\n    var offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return _objectSpread({\n      opacity: 0,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n    }, reverse ? _objectSpread(_objectSpread({}, offset), {}, {\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    }) : {\n      transitionEnd: _objectSpread(_objectSpread({}, offset), transitionEnd == null ? void 0 : transitionEnd.exit)\n    });\n  }\n};\nvar slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nvar SlideFade = forwardRef(function SlideFade2(props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    _props$reverse = props.reverse,\n    reverse = _props$reverse === void 0 ? true : _props$reverse,\n    className = props.className,\n    _props$offsetX = props.offsetX,\n    offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,\n    _props$offsetY = props.offsetY,\n    offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    rest = _objectWithoutProperties(props, _excluded);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom: custom,\n    children: show && /* @__PURE__ */jsx(motion.div, _objectSpread(_objectSpread({\n      ref: ref,\n      className: cx(\"chakra-offset-slide\", className),\n      custom: custom\n    }, slideFadeConfig), {}, {\n      animate: animate\n    }, rest))\n  });\n});\nSlideFade.displayName = \"SlideFade\";\nexport { slideFadeConfig, SlideFade };","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,UAAU;AACnB,SACEC,iBAEAC,cAEK;AACP,SAASC,kBAAkB;AAkGjB;AAvEV,IAAMC,WAAuC;EAC3CC,SAAS,uBAAyD;IAAA,IAAtDC;MAASC;MAASC;MAAYC;MAAeC;IAnC3D;IAmCwE;MACpEC,SAAS;MACTC,GAAGN;MACHO,GAAGN;MACHC,aACEM,8CAAYC,SAAZ,YAAoBC,UAAUD,KAAKE,oBAAoBF,MAAML,KAAK;MACpED,eAAeA,+CAAeM;IAChC;EAAA;EACAG,OAAO,sBAAuC;IAAA,IAApCV;MAAYC;MAAeC;IA3CvC;IA2CoD;MAChDC,SAAS;MACTC,GAAG;MACHC,GAAG;MACHL,aACEM,8CAAYI,UAAZ,YAAqBF,UAAUE,MAAMD,oBAAoBC,OAAOR,KAAK;MACvED,eAAeA,+CAAeS;IAChC;EAAA;EACAH,MAAM,qBAAqE;IAAA,IAAlER;MAASD;MAASE;MAAYC;MAAeU;MAAST;IAnDjE;IAoDI,IAAMU,SAAS;MAAER,GAAGN;MAASO,GAAGN;IAAQ;IACxC;MACEI,SAAS;MACTH,aACEM,8CAAYC,SAAZ,YAAoBC,UAAUD,KAAKE,oBAAoBF,MAAML,KAAK;IAAA,GAChES,0CACKC;MAAQX,eAAeA,+CAAeM;IAAA,KAC3C;MAAEN,+CAAoBW,SAAWX,+CAAeM;IAAO;EAE/D;AACF;AAEO,IAAMM,kBAA0C;EACrDhB,SAAS;EACTiB,SAAS;EACTP,MAAM;EACNX;AACF;AAMO,IAAMmB,YAAYpB,WACvB,SAASoB,WAAUC,OAAOC,KAAK;EAC7B,IACEC,gBAUEF,MAVFE;IACIC,SASFH,MATFI;IAAAC,iBASEL,MARFL;IAAAA,sCAAU;IACVW,YAOEN,MAPFM;IAAAC,iBAOEP,MANFlB;IAAAA,sCAAU;IAAA0B,iBAMRR,MALFjB;IAAAA,sCAAU;IACVC,aAIEgB,MAJFhB;IACAC,gBAGEe,MAHFf;IACAC,QAEEc,MAFFd;IACGuB,gCACDT;EAEJ,IAAMU,OAAOR,gBAAgBC,UAAUD,gBAAgB;EACvD,IAAMJ,UAAUK,UAAUD,gBAAgB,UAAU;EAEpD,IAAMS,SAAS;IACb7B;IACAC;IACAY;IACAX;IACAC;IACAC;EACF;EAEA,OACE,mBAACT;IAAgBkC;IACdC,kBACC,mBAAClC,OAAOmC;MACNZ;MACAK,WAAW9B,GAAG,uBAAuB8B,SAAS;MAC9CK;IAAA,GACId;MACJC;IAAA,GACIW,KACN;EAAA,CAEJ;AAEJ,CACF;AAEAV,UAAUe,cAAc","names":["cx","AnimatePresence","motion","forwardRef","variants","initial","offsetX","offsetY","transition","transitionEnd","delay","opacity","x","y","_a","exit","withDelay","TRANSITION_DEFAULTS","enter","reverse","offset","slideFadeConfig","animate","SlideFade","props","ref","unmountOnExit","isOpen","in","_props$reverse","className","_props$offsetX","_props$offsetY","rest","show","custom","children","div","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\transition\\src\\slide-fade.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = forwardRef<HTMLDivElement, SlideFadeProps>(\n  function SlideFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nSlideFade.displayName = \"SlideFade\"\n"]},"metadata":{},"sourceType":"module"}