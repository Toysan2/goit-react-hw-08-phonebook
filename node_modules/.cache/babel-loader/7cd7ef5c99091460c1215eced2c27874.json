{"ast":null,"code":"'use client';\n\n// src/modal-transition.tsx\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"preset\", \"motionProps\"];\nimport { chakra } from \"@chakra-ui/system\";\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\";\nimport { motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar transitions = {\n  slideInBottom: _objectSpread(_objectSpread({}, slideFadeConfig), {}, {\n    custom: {\n      offsetY: 16,\n      reverse: true\n    }\n  }),\n  slideInRight: _objectSpread(_objectSpread({}, slideFadeConfig), {}, {\n    custom: {\n      offsetX: 16,\n      reverse: true\n    }\n  }),\n  slideInTop: _objectSpread(_objectSpread({}, slideFadeConfig), {}, {\n    custom: {\n      offsetY: -16,\n      reverse: true\n    }\n  }),\n  slideInLeft: _objectSpread(_objectSpread({}, slideFadeConfig), {}, {\n    custom: {\n      offsetX: -16,\n      reverse: true\n    }\n  }),\n  scale: _objectSpread(_objectSpread({}, scaleFadeConfig), {}, {\n    custom: {\n      initialScale: 0.95,\n      reverse: true\n    }\n  }),\n  none: {}\n};\nvar MotionSection = chakra(motion.section);\nvar getMotionProps = function getMotionProps(preset) {\n  return transitions[preset || \"none\"];\n};\nvar ModalTransition = forwardRef(function (props, ref) {\n  var preset = props.preset,\n    _props$motionProps = props.motionProps,\n    motionProps = _props$motionProps === void 0 ? getMotionProps(preset) : _props$motionProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  return /* @__PURE__ */jsx(MotionSection, _objectSpread(_objectSpread({\n    ref: ref\n  }, motionProps), rest));\n});\nModalTransition.displayName = \"ModalTransition\";\nexport { ModalTransition };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,cAA2B;AACpC,SAASC,iBAAiBC,uBAAuB;AACjD,SAA0BC,cAAc;AACxC,SAASC,kBAAkB;AAiDrB;AAlCN,IAAMC,cAAc;EAClBC,+CACKJ;IACHK,QAAQ;MAAEC,SAAS;MAAIC,SAAS;IAAK;EAAA,EACvC;EACAC,8CACKR;IACHK,QAAQ;MAAEI,SAAS;MAAIF,SAAS;IAAK;EAAA,EACvC;EACAG,4CACKV;IACHK,QAAQ;MAAEC,SAAS;MAAKC,SAAS;IAAK;EAAA,EACxC;EACAI,6CACKX;IACHK,QAAQ;MAAEI,SAAS;MAAKF,SAAS;IAAK;EAAA,EACxC;EACAK,uCACKb;IACHM,QAAQ;MAAEQ,cAAc;MAAMN,SAAS;IAAK;EAAA,EAC9C;EACAO,MAAM,CAAC;AACT;AAEA,IAAMC,gBAAgBjB,OAAOG,OAAOe,OAAO;AAE3C,IAAMC,iBAAiB,SAAjBA,eAAkBC,QAA2C;EACjE,OAAOf,YAAYe,UAAU,MAAM;AACrC;AAEO,IAAMC,kBAAkBjB,WAC7B,UAACkB,OAA6BC,KAAwB;EACpD,IAAQH,SAA0DE,MAA1DF;IAAAI,qBAA0DF,MAAlDG;IAAAA,8CAAcN,eAAeC,MAAM;IAAMM,gCAASJ;EAClE,OACE,mBAACL;IAAcM;EAAA,GAAeE,cAAiCC,KAAM;AAEzE,CACF;AAEAL,gBAAgBM,cAAc","names":["chakra","scaleFadeConfig","slideFadeConfig","motion","forwardRef","transitions","slideInBottom","custom","offsetY","reverse","slideInRight","offsetX","slideInTop","slideInLeft","scale","initialScale","none","MotionSection","section","getMotionProps","preset","ModalTransition","props","ref","_props$motionProps","motionProps","rest","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\modal\\src\\modal-transition.tsx"],"sourcesContent":["import { chakra, ChakraProps } from \"@chakra-ui/system\"\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\"\nimport { HTMLMotionProps, motion } from \"framer-motion\"\nimport { forwardRef } from \"react\"\n\nexport interface ModalTransitionProps\n  extends Omit<HTMLMotionProps<\"section\">, \"color\" | \"transition\">,\n    ChakraProps {\n  preset?:\n    | \"slideInBottom\"\n    | \"slideInRight\"\n    | \"slideInTop\"\n    | \"slideInLeft\"\n    | \"scale\"\n    | \"none\"\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\nconst transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: { offsetY: 16, reverse: true },\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: { offsetX: 16, reverse: true },\n  },\n  slideInTop: {\n    ...slideFadeConfig,\n    custom: { offsetY: -16, reverse: true },\n  },\n  slideInLeft: {\n    ...slideFadeConfig,\n    custom: { offsetX: -16, reverse: true },\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.95, reverse: true },\n  },\n  none: {},\n}\n\nconst MotionSection = chakra(motion.section)\n\nconst getMotionProps = (preset: ModalTransitionProps[\"preset\"]) => {\n  return transitions[preset || \"none\"]\n}\n\nexport const ModalTransition = forwardRef(\n  (props: ModalTransitionProps, ref: React.Ref<any>) => {\n    const { preset, motionProps = getMotionProps(preset), ...rest } = props\n    return (\n      <MotionSection ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n    )\n  },\n)\n\nModalTransition.displayName = \"ModalTransition\"\n"]},"metadata":{},"sourceType":"module"}