{"ast":null,"code":"'use client';\n\n// src/center.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"axis\"];\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(function AbsoluteCenter2(props, ref) {\n  var _props$axis = props.axis,\n    axis = _props$axis === void 0 ? \"both\" : _props$axis,\n    rest = _objectWithoutProperties(props, _excluded);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    __css: centerStyles[axis]\n  }, rest), {}, {\n    position: \"absolute\"\n  }));\n});\nexport { Center, AbsoluteCenter };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,QAAQC,kBAAmC;AAqD9C;AA3CC,IAAMC,SAASF,OAAO,OAAO;EAClCG,WAAW;IACTC,SAAS;IACTC,YAAY;IACZC,gBAAgB;EAClB;AACF,CAAC;AAEDJ,OAAOK,cAAc;AAMrB,IAAMC,eAAe;EACnBC,YAAY;IACVC,YAAY;IACZC,WAAW;EACb;EACAC,UAAU;IACRC,KAAK;IACLF,WAAW;EACb;EACAG,MAAM;IACJJ,YAAY;IACZG,KAAK;IACLF,WAAW;EACb;AACF;AAWO,IAAMI,iBAAiBd,WAC5B,SAASc,gBAAeC,OAAOC,KAAK;EAClC,kBAAmCD,MAA3BE;IAAAA,gCAAO;IAAWC,gCAASH;EACnC,OACE,mBAAChB,OAAOoB;IACNH;IACAI,OAAOb,aAAaU,IAAI;EAAA,GACpBC;IACJG,UAAS;EAAA,EACX;AAEJ,CACF","names":["chakra","forwardRef","Center","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","AbsoluteCenter","props","ref","axis","rest","div","__css","position"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\center.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}