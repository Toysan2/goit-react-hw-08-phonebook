{"ast":null,"code":"'use client';\n\n// src/use-update-effect.ts\nimport { useEffect, useRef } from \"react\";\nvar useUpdateEffect = function useUpdateEffect(effect, deps) {\n  var renderCycleRef = useRef(false);\n  var effectCycleRef = useRef(false);\n  useEffect(function () {\n    var isMounted = renderCycleRef.current;\n    var shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  useEffect(function () {\n    renderCycleRef.current = true;\n    return function () {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\nexport { useUpdateEffect };","map":{"version":3,"mappings":";;;AAAA,SAASA,WAAWC,cAAc;AAM3B,IAAMC,kBAAoC,SAApCA,gBAAqCC,QAAQC,MAAS;EACjE,IAAMC,iBAAiBJ,OAAO,KAAK;EACnC,IAAMK,iBAAiBL,OAAO,KAAK;EAEnCD,UAAU,YAAM;IACd,IAAMO,YAAYF,eAAeG;IACjC,IAAMC,YAAYF,aAAaD,eAAeE;IAC9C,IAAIC,WAAW;MACb,OAAON,OAAO;IAChB;IACAG,eAAeE,UAAU;EAE3B,GAAGJ,IAAI;EAEPJ,UAAU,YAAM;IACdK,eAAeG,UAAU;IACzB,OAAO,YAAM;MACXH,eAAeG,UAAU;IAC3B;EACF,GAAG,EAAE;AACP","names":["useEffect","useRef","useUpdateEffect","effect","deps","renderCycleRef","effectCycleRef","isMounted","current","shouldRun"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\hooks\\src\\use-update-effect.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\n/**\n * React effect hook that invokes only on update.\n * It doesn't invoke on mount\n */\nexport const useUpdateEffect: typeof useEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false)\n  const effectCycleRef = useRef(false)\n\n  useEffect(() => {\n    const isMounted = renderCycleRef.current\n    const shouldRun = isMounted && effectCycleRef.current\n    if (shouldRun) {\n      return effect()\n    }\n    effectCycleRef.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n\n  useEffect(() => {\n    renderCycleRef.current = true\n    return () => {\n      renderCycleRef.current = false\n    }\n  }, [])\n}\n"]},"metadata":{},"sourceType":"module"}