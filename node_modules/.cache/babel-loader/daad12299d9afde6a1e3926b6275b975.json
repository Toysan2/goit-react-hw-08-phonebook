{"ast":null,"code":"'use client';\n\n// src/use-attr-observer.ts\nimport _createForOfIteratorHelper from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(function () {\n    var _a;\n    if (!ref.current || !enabled) return;\n    var win = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    var attrs = Array.isArray(attributes) ? attributes : [attributes];\n    var obs = new win.MutationObserver(function (changes) {\n      var _iterator = _createForOfIteratorHelper(changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n            fn(change);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return function () {\n      return obs.disconnect();\n    };\n  });\n}\nexport { useAttributeObserver };","map":{"version":3,"mappings":";;;;AAAA,SAASA,iBAAiB;AAEnB,SAASC,qBACdC,KACAC,YACAC,IACAC,SACA;EACAL,UAAU,YAAM;IARlB;IASI,IAAI,CAACE,IAAII,WAAW,CAACD,SAAS;IAC9B,IAAME,OAAMC,SAAIF,QAAQG,cAAcC,gBAA1B,YAAyCC;IACrD,IAAMC,QAAQC,MAAMC,QAAQX,UAAU,IAAIA,aAAa,CAACA,UAAU;IAClE,IAAMY,MAAM,IAAIR,IAAIS,iBAAiB,UAACC,SAAY;MAAA,2CAC3BA;QAAAC;MAAA;QAArB,oDAA8B;UAAA,IAAnBC;UACT,IACEA,OAAOC,SAAS,gBAChBD,OAAOE,iBACPT,MAAMU,SAASH,OAAOE,aAAa,GACnC;YACAjB,GAAGe,MAAM;UACX;QACF;MAAA;QAAAI;MAAA;QAAAA;MAAA;IACF,CAAC;IAEDR,IAAIS,QAAQtB,IAAII,SAAS;MAAEH,YAAY;MAAMsB,iBAAiBb;IAAM,CAAC;IAErE,OAAO;MAAA,OAAMG,IAAIW,WAAW;IAAA;EAC9B,CAAC;AACH","names":["useEffect","useAttributeObserver","ref","attributes","fn","enabled","current","win","_a","ownerDocument","defaultView","window","attrs","Array","isArray","obs","MutationObserver","changes","_step","change","type","attributeName","includes","_iterator","observe","attributeFilter","disconnect"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\number-input\\src\\use-attr-observer.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\nexport function useAttributeObserver(\n  ref: React.RefObject<HTMLElement | null>,\n  attributes: string | string[],\n  fn: (v: MutationRecord) => void,\n  enabled: boolean,\n) {\n  useEffect(() => {\n    if (!ref.current || !enabled) return\n    const win = ref.current.ownerDocument.defaultView ?? window\n    const attrs = Array.isArray(attributes) ? attributes : [attributes]\n    const obs = new win.MutationObserver((changes) => {\n      for (const change of changes) {\n        if (\n          change.type === \"attributes\" &&\n          change.attributeName &&\n          attrs.includes(change.attributeName)\n        ) {\n          fn(change)\n        }\n      }\n    })\n\n    obs.observe(ref.current, { attributes: true, attributeFilter: attrs })\n\n    return () => obs.disconnect()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}