{"ast":null,"code":"'use client';\n\n// src/flex.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"direction\", \"align\", \"justify\", \"wrap\", \"basis\", \"grow\", \"shrink\"];\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  var direction = props.direction,\n    align = props.align,\n    justify = props.justify,\n    wrap = props.wrap,\n    basis = props.basis,\n    grow = props.grow,\n    shrink = props.shrink,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\nFlex.displayName = \"Flex\";\nexport { Flex };","map":{"version":3,"mappings":";;;;;;AAAA,SACEA,QACAC,kBAGK;AAwEE;AAfF,IAAMC,OAAOD,WAA6B,SAASC,MAAKC,OAAOC,KAAK;EACzE,IAAQC,YACNF,MADME;IAAWC,QACjBH,MADiBG;IAAOC,UACxBJ,MADwBI;IAASC,OACjCL,MADiCK;IAAMC,QACvCN,MADuCM;IAAOC,OAC9CP,MAD8CO;IAAMC,SACpDR,MADoDQ;IAAWC,gCAC/DT;EAEF,IAAMU,SAAS;IACbC,SAAS;IACTC,eAAeV;IACfW,YAAYV;IACZW,gBAAgBV;IAChBW,UAAUV;IACVW,WAAWV;IACXW,UAAUV;IACVW,YAAYV;EACd;EAEA,OAAO,mBAACX,OAAOsB;IAAIlB;IAAUmB,OAAOV;EAAA,GAAYD,KAAM;AACxD,CAAC;AAEDV,KAAKsB,cAAc","names":["chakra","forwardRef","Flex","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\flex.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"]},"metadata":{},"sourceType":"module"}