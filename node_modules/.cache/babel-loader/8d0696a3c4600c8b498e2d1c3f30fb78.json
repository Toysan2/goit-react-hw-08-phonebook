{"ast":null,"code":"'use client';\n\n// src/link.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"isExternal\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  var styles = useStyleConfig(\"Link\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    isExternal = _omitThemingProps.isExternal,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  return /* @__PURE__ */jsx(chakra.a, _objectSpread(_objectSpread({\n    target: isExternal ? \"_blank\" : void 0,\n    rel: isExternal ? \"noopener\" : void 0,\n    ref: ref,\n    className: cx(\"chakra-link\", className)\n  }, rest), {}, {\n    __css: styles\n  }));\n});\nLink.displayName = \"Link\";\nexport { Link };","map":{"version":3,"mappings":";;;;;;AAAA,SACEA,QACAC,YACAC,kBAEAC,sBAEK;AACP,SAASC,UAAU;AA8Bf;AALG,IAAMC,OAAOJ,WAA2B,SAASI,MAAKC,OAAOC,KAAK;EACvE,IAAMC,SAASL,eAAe,QAAQG,KAAK;EAC3C,wBAA2CJ,iBAAiBI,KAAK;IAAzDG;IAAWC;IAAeC;EAElC,OACE,mBAACX,OAAOY;IACNC,QAAQH,aAAa,WAAW;IAChCI,KAAKJ,aAAa,aAAa;IAC/BH;IACAE,WAAWL,GAAG,eAAeK,SAAS;EAAA,GAClCE;IACJI,OAAOP;EAAA,EACT;AAEJ,CAAC;AAEDH,KAAKW,cAAc","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","Link","props","ref","styles","className","isExternal","rest","a","target","rel","__css","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\link.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n"]},"metadata":{},"sourceType":"module"}