{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\", \"motionProps\"];\nimport { TRANSITION_EASINGS, getSlideTransition, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/slide.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: function exit(_ref) {\n    var direction = _ref.direction,\n      transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      delay = _ref.delay;\n    var _a;\n    var _getSlideTransition = getSlideTransition({\n        direction: direction\n      }),\n      exitStyles = _getSlideTransition.exit;\n    return _objectSpread(_objectSpread({}, exitStyles), {}, {\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: function enter(_ref2) {\n    var direction = _ref2.direction,\n      transitionEnd = _ref2.transitionEnd,\n      transition = _ref2.transition,\n      delay = _ref2.delay;\n    var _a;\n    var _getSlideTransition2 = getSlideTransition({\n        direction: direction\n      }),\n      enterStyles = _getSlideTransition2.enter;\n    return _objectSpread(_objectSpread({}, enterStyles), {}, {\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  var _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"right\" : _props$direction,\n    style = props.style,\n    unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var transitionStyles = getSlideTransition({\n    direction: direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd: transitionEnd,\n    transition: transition,\n    direction: direction,\n    delay: delay\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom: custom,\n    children: show && /* @__PURE__ */jsx(motion.div, _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate: animate,\n      exit: \"exit\",\n      custom: custom,\n      variants: variants,\n      style: computedStyle\n    }, motionProps))\n  });\n});\nSlide.displayName = \"Slide\";\nexport { Slide };","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,UAAU;AACnB,SACEC,iBAEAC,cAGK;AACP,SAASC,kBAAkB;AA2FnB;AA/ER,IAAMC,oBAAoB;EACxBC,MAAM;IACJC,UAAU;IACVC,MAAMC,mBAAmBC;EAC3B;EACAC,OAAO;IACLC,MAAM;IACNC,SAAS;IACTC,WAAW;EACb;AACF;AAEA,IAAMC,WAAmC;EACvCT,MAAM,oBAAqD;IAAA,IAAlDU;MAAWC;MAAYC;MAAeC;IAjCjD;IAkCI,0BAA6BC,mBAAmB;QAAEJ;MAAU,CAAC;MAA/CK,iCAANf;IACR,uCACKe;MACHJ,aACEK,8CAAYhB,SAAZ,YAAoBiB,UAAUjB,KAAKD,kBAAkBC,MAAMa,KAAK;MAClED,eAAeA,+CAAeZ;IAAA;EAElC;EACAK,OAAO,sBAAqD;IAAA,IAAlDK;MAAWE;MAAeD;MAAYE;IA1ClD;IA2CI,2BAA+BC,mBAAmB;QAAEJ;MAAU,CAAC;MAAhDQ,mCAAPb;IACR,uCACKa;MACHP,aACEK,8CAAYX,UAAZ,YAAqBY,UAAUZ,MAAMN,kBAAkBM,OAAOQ,KAAK;MACrED,eAAeA,+CAAeP;IAAA;EAElC;AACF;AAgBO,IAAMc,QAAQrB,WAAuC,SAASqB,OACnEC,OACAC,KACA;EACA,uBAWID,MAVFV;IAAAA,0CAAY;IACZY,QASEF,MATFE;IACAC,gBAQEH,MARFG;IACIC,SAOFJ,MAPFK;IACAC,YAMEN,MANFM;IACAf,aAKES,MALFT;IACAC,gBAIEQ,MAJFR;IACAC,QAGEO,MAHFP;IACAc,cAEEP,MAFFO;IACGC,gCACDR;EAEJ,IAAMS,mBAAmBf,mBAAmB;IAAEJ;EAAU,CAAC;EACzD,IAAMoB,gBAA6BC,OAAOC,OACxC;IAAEC,UAAU;EAAQ,GACpBJ,iBAAiBI,UACjBX,KACF;EAEA,IAAMY,OAAOX,gBAAgBC,UAAUD,gBAAgB;EACvD,IAAMY,UAAUX,UAAUD,gBAAgB,UAAU;EAEpD,IAAMa,SAAS;IAAExB;IAAeD;IAAYD;IAAWG;EAAM;EAE7D,OACE,mBAACjB;IAAgBwC;IACdC,kBACC,mBAACxC,OAAOyC,qCACFV;MACJP;MACAkB,SAAQ;MACRb,WAAW/B,GAAG,gBAAgB+B,SAAS;MACvCS;MACAnC,MAAK;MACLoC;MACA3B;MACAa,OAAOQ;IAAA,GACHH,YACN;EAAA,CAEJ;AAEJ,CAAC;AAEDR,MAAMqB,cAAc","names":["cx","AnimatePresence","motion","forwardRef","defaultTransition","exit","duration","ease","TRANSITION_EASINGS","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","getSlideTransition","exitStyles","_a","withDelay","enterStyles","Slide","props","ref","style","unmountOnExit","isOpen","in","className","motionProps","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","children","div","initial","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\transition\\src\\slide.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as TVariants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  SlideDirection,\n  getSlideTransition,\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = getSlideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = getSlideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nexport const Slide = forwardRef<HTMLDivElement, SlideProps>(function Slide(\n  props,\n  ref,\n) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props\n\n  const transitionStyles = getSlideTransition({ direction })\n  const computedStyle: MotionStyle = Object.assign(\n    { position: \"fixed\" },\n    transitionStyles.position,\n    style,\n  )\n\n  const show = unmountOnExit ? isOpen && unmountOnExit : true\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n  const custom = { transitionEnd, transition, direction, delay }\n\n  return (\n    <AnimatePresence custom={custom}>\n      {show && (\n        <motion.div\n          {...rest}\n          ref={ref}\n          initial=\"exit\"\n          className={cx(\"chakra-slide\", className)}\n          animate={animate}\n          exit=\"exit\"\n          custom={custom}\n          variants={variants as TVariants}\n          style={computedStyle}\n          {...motionProps}\n        />\n      )}\n    </AnimatePresence>\n  )\n})\n\nSlide.displayName = \"Slide\"\n"]},"metadata":{},"sourceType":"module"}