{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Icon } from \"./chunk-2GBDXOMA.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  var _options$viewBox = options.viewBox,\n    viewBox = _options$viewBox === void 0 ? \"0 0 24 24\" : _options$viewBox,\n    pathDefinition = options.d,\n    displayName = options.displayName,\n    _options$defaultProps = options.defaultProps,\n    defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps;\n  var path = Children.toArray(options.path);\n  var Comp = forwardRef(function (props, ref) {\n    return /* @__PURE__ */jsx(Icon, _objectSpread(_objectSpread(_objectSpread({\n      ref: ref,\n      viewBox: viewBox\n    }, defaultProps), props), {}, {\n      children: path.length ? path : /* @__PURE__ */jsx(\"path\", {\n        fill: \"currentColor\",\n        d: pathDefinition\n      })\n    }));\n  });\n  Comp.displayName = displayName;\n  return Comp;\n}\nexport { createIcon };","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,kBAAkB;AAC3B,SAASC,gBAAgB;AAuCG;AAXrB,SAASC,WAAWC,SAA4B;EACrD,uBAKIA,QAJFC;IAAAA,wCAAU;IACPC,iBAGDF,QAHFG;IACAC,cAEEJ,QAFFI;IAAAC,wBAEEL,QADFM;IAAAA,kDAAe,CAAC;EAElB,IAAMC,OAAOT,SAASU,QAAQR,QAAQO,IAAI;EAE1C,IAAME,OAAOZ,WAA6B,UAACa,OAAOC;IAAA,OAChD,mBAACC;MAAKD;MAAUV;IAAA,GAAsBK,eAAkBI;MACrDG,eAAKC,SAASP,OAAO,mBAAC;QAAKQ,MAAK;QAAeZ,GAAGD;MAAA,CAAgB;IAAA,EACrE,CACD;EAAA;EAEDO,KAAKL,cAAcA;EAEnB,OAAOK;AACT","names":["forwardRef","Children","createIcon","options","viewBox","pathDefinition","d","displayName","_options$defaultProps","defaultProps","path","toArray","Comp","props","ref","Icon","children","length","fill"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\icon\\src\\create-icon.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n"]},"metadata":{},"sourceType":"module"}