{"ast":null,"code":"'use client';\n\nimport { CheckboxGroupProvider } from \"./chunk-LYGBQ47X.mjs\";\nimport { useCheckboxGroup } from \"./chunk-TOQK4WO2.mjs\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n    size = props.size,\n    variant = props.variant,\n    children = props.children,\n    isDisabled = props.isDisabled;\n  var _useCheckboxGroup = useCheckboxGroup(props),\n    value = _useCheckboxGroup.value,\n    onChange = _useCheckboxGroup.onChange;\n  var group = useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */jsx(CheckboxGroupProvider, {\n    value: group,\n    children: children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"mappings":";;;;;;AACA,SAASA,eAAe;AAiCf;AAhBF,SAASC,cAAcC,OAA2B;EACvD,IAAQC,cAAqDD,MAArDC;IAAaC,OAAwCF,MAAxCE;IAAMC,UAAkCH,MAAlCG;IAASC,WAAyBJ,MAAzBI;IAAUC,aAAeL,MAAfK;EAC9C,wBAA4BC,iBAAiBN,KAAK;IAA1CO;IAAOC;EAEf,IAAMC,QAAQX,QACZ;IAAA,OAAO;MACLI;MACAM;MACAP;MACAM;MACAJ;MACAE;IACF;EAAA,GACA,CAACH,MAAMM,UAAUP,aAAaM,OAAOJ,SAASE,UAAU,CAC1D;EAEA,OAAO,mBAACK;IAAsBH,OAAOE;IAAOL;EAAA,CAAoB;AAClE;AAEAL,cAAcY,cAAc","names":["useMemo","CheckboxGroup","props","colorScheme","size","variant","children","isDisabled","useCheckboxGroup","value","onChange","group","CheckboxGroupProvider","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\checkbox\\src\\checkbox-group.tsx"],"sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { CheckboxGroupProvider } from \"./checkbox-context\"\nimport { UseCheckboxGroupProps } from \"./checkbox-types\"\nimport { useCheckboxGroup } from \"./use-checkbox-group\"\n\nexport interface CheckboxGroupProps\n  extends UseCheckboxGroupProps,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {\n  children?: React.ReactNode\n}\n\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nexport function CheckboxGroup(props: CheckboxGroupProps) {\n  const { colorScheme, size, variant, children, isDisabled } = props\n  const { value, onChange } = useCheckboxGroup(props)\n\n  const group = useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled],\n  )\n\n  return <CheckboxGroupProvider value={group} children={children} />\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\"\n"]},"metadata":{},"sourceType":"module"}