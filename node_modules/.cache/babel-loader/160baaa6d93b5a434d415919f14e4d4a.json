{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"];\nimport { BreadcrumbLink } from \"./chunk-UIZJRKRT.mjs\";\nimport { BreadcrumbSeparator } from \"./chunk-I4SEDIQD.mjs\";\nimport { useBreadcrumbStyles } from \"./chunk-24NX3CUR.mjs\";\n\n// src/breadcrumb-item.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar BreadcrumbItem = forwardRef(function BreadcrumbItem2(props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    separator = props.separator,\n    isLastChild = props.isLastChild,\n    spacing = props.spacing,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useBreadcrumbStyles();\n  var itemStyles = _objectSpread({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /* @__PURE__ */jsxs(chakra.li, _objectSpread(_objectSpread({\n    ref: ref,\n    className: _className\n  }, rest), {}, {\n    __css: itemStyles,\n    children: [clones, !isLastChild && /* @__PURE__ */jsx(BreadcrumbSeparator, {\n      spacing: spacing,\n      children: separator\n    })]\n  }));\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport { BreadcrumbItem };","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SACEA,QACAC,kBAGK;AACP,SAASC,wBAAwB;AACjC,SAASC,UAAU;AAInB,SAASC,oBAAoB;AAuDvB,SAGIC,KAHJC;AAzCC,IAAMC,iBAAiBN,WAC5B,SAASM,gBAAeC,OAAOC,KAAK;EAClC,IACEC,gBAOEF,MAPFE;IACAC,YAMEH,MANFG;IACAC,cAKEJ,MALFI;IACAC,UAIEL,MAJFK;IACAC,WAGEN,MAHFM;IACAC,YAEEP,MAFFO;IACGC,gCACDR;EAEJ,IAAMS,gBAAgBf,iBAAiBY,QAAQ;EAE/C,IAAMI,SAASD,cAAcE,IAAI,UAACC,OAAU;IAC1C,IAAIA,MAAMC,SAASC,gBAAgB;MACjC,OAAOlB,aAAagB,OAAO;QACzBV;MACF,CAAC;IACH;IAEA,IAAIU,MAAMC,SAASE,qBAAqB;MACtC,OAAOnB,aAAagB,OAAO;QACzBP;QACAC,UAAUM,MAAMZ,MAAMM,YAAYH;MACpC,CAAC;IACH;IAEA,OAAOS;EACT,CAAC;EAED,IAAMI,SAASC,oBAAoB;EACnC,IAAMC;IACJC,SAAS;IACTC,YAAY;EAAA,GACTJ,OAAOK,KACZ;EAEA,IAAMC,aAAa3B,GAAG,gCAAgCY,SAAS;EAE/D,OACE,oBAACf,OAAO+B;IAAGtB;IAAUM,WAAWe;EAAA,GAAgBd;IAAMgB,OAAON;IAC1DZ,mBACA,CAACF,eACA,mBAACW;MAAoBV;MAClBC;IAAA,CACH;EAAA,EAEJ;AAEJ,CACF;AACAP,eAAe0B,cAAc","names":["chakra","forwardRef","getValidChildren","cx","cloneElement","jsx","jsxs","BreadcrumbItem","props","ref","isCurrentPage","separator","isLastChild","spacing","children","className","rest","validChildren","clones","map","child","type","BreadcrumbLink","BreadcrumbSeparator","styles","useBreadcrumbStyles","itemStyles","display","alignItems","item","_className","li","__css","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\breadcrumb\\src\\breadcrumb-item.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useBreadcrumbStyles } from \"./breadcrumb-context\"\nimport { BreadcrumbSeparator } from \"./breadcrumb-separator\"\nimport { BreadcrumbLink } from \"./breadcrumb-link\"\nimport { cloneElement } from \"react\"\nimport { BreadcrumbItemOptions } from \"./breadcrumb-types\"\n\nexport interface BreadcrumbItemProps\n  extends BreadcrumbItemOptions,\n    HTMLChakraProps<\"li\"> {}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemProps, \"li\">(\n  function BreadcrumbItem(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props\n\n    const validChildren = getValidChildren(children)\n\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const styles = useBreadcrumbStyles()\n    const itemStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    const _className = cx(\"chakra-breadcrumb__list-item\", className)\n\n    return (\n      <chakra.li ref={ref} className={_className} {...rest} __css={itemStyles}>\n        {clones}\n        {!isLastChild && (\n          <BreadcrumbSeparator spacing={spacing}>\n            {separator}\n          </BreadcrumbSeparator>\n        )}\n      </chakra.li>\n    )\n  },\n)\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n"]},"metadata":{},"sourceType":"module"}