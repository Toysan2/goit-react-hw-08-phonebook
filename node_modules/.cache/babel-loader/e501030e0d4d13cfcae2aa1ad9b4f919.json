{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactsAsync, addContactAsync, deleteContactAsync, updateFilter } from './actions';\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\n// Reducers using builder callback notation\nconst contactsReducer = createReducer(initialState.contacts, builder => {\n  builder.addCase(fetchContactsAsync.fulfilled, (state, action) => {\n    return action.payload;\n  }).addCase(addContactAsync.fulfilled, (state, action) => {\n    state.push(action.payload);\n  }).addCase(deleteContactAsync.fulfilled, (state, action) => {\n    return state.filter(contact => contact.id !== action.payload);\n  });\n});\nconst filterReducer = createReducer(initialState.filter, builder => {\n  builder.addCase(updateFilter, (state, action) => {\n    return action.payload;\n  });\n});\nexport { contactsReducer, filterReducer };","map":{"version":3,"names":["createReducer","fetchContactsAsync","addContactAsync","deleteContactAsync","updateFilter","initialState","contacts","filter","contactsReducer","builder","addCase","fulfilled","state","action","payload","push","contact","id","filterReducer"],"sources":["E:/GoIT/Zad dom/goit-react-hw-08-phonebook/src/redux/reducers.js"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContactsAsync, addContactAsync, deleteContactAsync, updateFilter } from './actions';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: ''\r\n};\r\n\r\n// Reducers using builder callback notation\r\nconst contactsReducer = createReducer(initialState.contacts, (builder) => {\r\n  builder\r\n    .addCase(fetchContactsAsync.fulfilled, (state, action) => {\r\n      return action.payload;\r\n    })\r\n    .addCase(addContactAsync.fulfilled, (state, action) => {\r\n      state.push(action.payload);\r\n    })\r\n    .addCase(deleteContactAsync.fulfilled, (state, action) => {\r\n      return state.filter(contact => contact.id !== action.payload);\r\n    });\r\n});\r\n\r\nconst filterReducer = createReducer(initialState.filter, (builder) => {\r\n  builder.addCase(updateFilter, (state, action) => {\r\n    return action.payload;\r\n  });\r\n});\r\n\r\nexport { contactsReducer, filterReducer };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,YAAY,QAAQ,WAAW;AAEjG,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGR,aAAa,CAACK,YAAY,CAACC,QAAQ,EAAGG,OAAO,IAAK;EACxEA,OAAO,CACJC,OAAO,CAACT,kBAAkB,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxD,OAAOA,MAAM,CAACC,OAAO;EACvB,CAAC,CAAC,CACDJ,OAAO,CAACR,eAAe,CAACS,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrDD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;EAC5B,CAAC,CAAC,CACDJ,OAAO,CAACP,kBAAkB,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxD,OAAOD,KAAK,CAACL,MAAM,CAACS,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACC,OAAO,CAAC;EAC/D,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAGlB,aAAa,CAACK,YAAY,CAACE,MAAM,EAAGE,OAAO,IAAK;EACpEA,OAAO,CAACC,OAAO,CAACN,YAAY,EAAE,CAACQ,KAAK,EAAEC,MAAM,KAAK;IAC/C,OAAOA,MAAM,CAACC,OAAO;EACvB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAASN,eAAe,EAAEU,aAAa"},"metadata":{},"sourceType":"module"}