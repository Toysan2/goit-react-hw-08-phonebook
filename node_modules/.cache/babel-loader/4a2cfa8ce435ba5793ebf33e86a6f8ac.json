{"ast":null,"code":"'use client';\n\n// src/container.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"centerContent\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    centerContent = _omitThemingProps.centerContent,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    className: cx(\"chakra-container\", className)\n  }, rest), {}, {\n    __css: _objectSpread(_objectSpread({}, styles), centerContent && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    })\n  }));\n});\nContainer.displayName = \"Container\";\nexport { Container };","map":{"version":3,"mappings":";;;;;;AAAA,SACEA,QACAC,YACAC,kBAEAC,sBAEK;AACP,SAASC,UAAU;AAiCf;AATG,IAAMC,YAAYJ,WAAkC,SAASI,WAClEC,OACAC,KACA;EACA,wBAA8CL,iBAAiBI,KAAK;IAA5DE;IAAWC;IAAkBC;EAErC,IAAMC,SAASR,eAAe,aAAaG,KAAK;EAEhD,OACE,mBAACN,OAAOY;IACNL;IACAC,WAAWJ,GAAG,oBAAoBI,SAAS;EAAA,GACvCE;IACJG,uCACKF,SACCF,iBAAiB;MACnBK,SAAS;MACTC,eAAe;MACfC,YAAY;IACd;EACF,EACF;AAEJ,CAAC;AAEDX,UAAUY,cAAc","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","Container","props","ref","className","centerContent","rest","styles","div","__css","display","flexDirection","alignItems","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\container.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n"]},"metadata":{},"sourceType":"module"}