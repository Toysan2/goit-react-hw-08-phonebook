{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalHeader = forwardRef(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    headerId = _useModalContext.headerId,\n    setHeaderMounted = _useModalContext.setHeaderMounted;\n  useEffect(function () {\n    setHeaderMounted(true);\n    return function () {\n      return setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  var _className = cx(\"chakra-modal__header\", className);\n  var styles = useModalStyles();\n  var headerStyles = _objectSpread({\n    flex: 0\n  }, styles.header);\n  return /* @__PURE__ */jsx(chakra.header, _objectSpread(_objectSpread({\n    ref: ref,\n    className: _className,\n    id: headerId\n  }, rest), {}, {\n    __css: headerStyles\n  }));\n});\nModalHeader.displayName = \"ModalHeader\";\nexport { ModalHeader };","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,UAAU;AACnB,SAGEC,QACAC,kBACK;AACP,SAASC,iBAAiB;AAqCpB;AAxBC,IAAMC,cAAcF,WACzB,UAACG,OAAOC,KAAQ;EACd,IAAQC,YAAuBF,MAAvBE;IAAcC,gCAASH;EAE/B,uBAAuCI,gBAAgB;IAA/CC;IAAUC;EAMlBR,UAAU,YAAM;IACdQ,iBAAiB,IAAI;IACrB,OAAO;MAAA,OAAMA,iBAAiB,KAAK;IAAA;EACrC,GAAG,CAACA,gBAAgB,CAAC;EAErB,IAAMC,aAAaZ,GAAG,wBAAwBO,SAAS;EAEvD,IAAMM,SAASC,eAAe;EAC9B,IAAMC;IACJC,MAAM;EAAA,GACHH,OAAOI,OACZ;EAEA,OACE,mBAAChB,OAAOgB;IACNX;IACAC,WAAWK;IACXM,IAAIR;EAAA,GACAF;IACJW,OAAOJ;EAAA,EACT;AAEJ,CACF;AAEAX,YAAYgB,cAAc","names":["cx","chakra","forwardRef","useEffect","ModalHeader","props","ref","className","rest","useModalContext","headerId","setHeaderMounted","_className","styles","useModalStyles","headerStyles","flex","header","id","__css","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\modal\\src\\modal-header.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useEffect } from \"react\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport interface ModalHeaderProps extends HTMLChakraProps<\"header\"> {}\n\n/**\n * ModalHeader\n *\n * React component that houses the title of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalHeader = forwardRef<ModalHeaderProps, \"header\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n\n    const { headerId, setHeaderMounted } = useModalContext()\n\n    /**\n     * Notify us if this component was rendered or used,\n     * so we can append `aria-labelledby` automatically\n     */\n    useEffect(() => {\n      setHeaderMounted(true)\n      return () => setHeaderMounted(false)\n    }, [setHeaderMounted])\n\n    const _className = cx(\"chakra-modal__header\", className)\n\n    const styles = useModalStyles()\n    const headerStyles: SystemStyleObject = {\n      flex: 0,\n      ...styles.header,\n    }\n\n    return (\n      <chakra.header\n        ref={ref}\n        className={_className}\n        id={headerId}\n        {...rest}\n        __css={headerStyles}\n      />\n    )\n  },\n)\n\nModalHeader.displayName = \"ModalHeader\"\n"]},"metadata":{},"sourceType":"module"}