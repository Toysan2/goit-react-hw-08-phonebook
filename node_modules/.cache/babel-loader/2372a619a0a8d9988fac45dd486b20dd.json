{"ast":null,"code":"const BASE_URL = 'https://connections-api.herokuapp.com';\nexport const registerUser = async userData => {\n  const response = await fetch(`${BASE_URL}/users/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  return await response.json();\n};\nexport const loginUser = async userData => {\n  const response = await fetch(`${BASE_URL}/users/login`, {\n    // Similar setup as registerUser\n  });\n  return await response.json();\n};\nexport const fetchContacts = async token => {\n  const response = await fetch(`${BASE_URL}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await response.json();\n};\nexport const addContact = async (contactData, token) => {\n  // POST request to `${BASE_URL}/contacts`\n};\nexport const updateContact = async (contactId, updatedData, token) => {\n  // PUT request to `${BASE_URL}/contacts/${contactId}`\n};\nexport const deleteContact = async (contactId, token) => {\n  // DELETE request to `${BASE_URL}/contacts/${contactId}`\n};","map":{"version":3,"names":["BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","json","loginUser","fetchContacts","token","Authorization","addContact","contactData","updateContact","contactId","updatedData","deleteContact"],"sources":["E:/GoIT/Zad dom/goit-react-hw-08-phonebook/src/components/myAPI/myAPI.jsx"],"sourcesContent":["const BASE_URL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const registerUser = async userData => {\r\n  const response = await fetch(`${BASE_URL}/users/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const loginUser = async userData => {\r\n  const response = await fetch(`${BASE_URL}/users/login`, {\r\n    // Similar setup as registerUser\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const fetchContacts = async token => {\r\n  const response = await fetch(`${BASE_URL}/contacts`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const addContact = async (contactData, token) => {\r\n  // POST request to `${BASE_URL}/contacts`\r\n};\r\n\r\nexport const updateContact = async (contactId, updatedData, token) => {\r\n  // PUT request to `${BASE_URL}/contacts/${contactId}`\r\n};\r\n\r\nexport const deleteContact = async (contactId, token) => {\r\n  // DELETE request to `${BASE_URL}/contacts/${contactId}`\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uCAAuC;AAExD,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,eAAc,EAAE;IACvDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAMT,QAAQ,IAAI;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,cAAa,EAAE;IACtD;EAAA,CACD,CAAC;EACF,OAAO,MAAMG,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAMC,KAAK,IAAI;EAC1C,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnDM,OAAO,EAAE;MACPQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC;EACF,OAAO,MAAMV,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOC,WAAW,EAAEH,KAAK,KAAK;EACtD;AAAA,CACD;AAED,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,EAAEN,KAAK,KAAK;EACpE;AAAA,CACD;AAED,OAAO,MAAMO,aAAa,GAAG,MAAAA,CAAOF,SAAS,EAAEL,KAAK,KAAK;EACvD;AAAA,CACD"},"metadata":{},"sourceType":"module"}