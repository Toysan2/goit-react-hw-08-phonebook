{"ast":null,"code":"var _jsxFileName = \"E:\\\\GoIT\\\\Zad dom\\\\goit-react-hw-08-phonebook\\\\src\\\\components\\\\Contacts\\\\Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport myAPI from '../myAPI/myAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacts() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const token = useSelector(state => state.auth.token);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      if (token) {\n        const fetchedContacts = await myAPI.fetchContacts(token);\n        setContacts(fetchedContacts);\n      }\n    };\n    fetchContacts();\n  }, [token]);\n  const handleAddContact = async newContactData => {\n    if (token) {\n      try {\n        const addedContact = await myAPI.addContact(newContactData, token);\n        if (addedContact) {\n          // Fetch the updated list of contacts after successfully adding a new contact\n          const updatedContacts = await myAPI.fetchContacts(token);\n          setContacts(updatedContacts);\n        } else {\n          // Handle the case where contact wasn't successfully added\n          console.error('Error: Contact was not added');\n        }\n      } catch (error) {\n        console.error('Error adding contact:', error);\n        // Handle the error appropriately\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n      onAddContact: handleAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacts, \"UWdr+WxyKo874b1hjBfc9hSEO7s=\", false, function () {\n  return [useSelector];\n});\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","ContactForm","ContactList","myAPI","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","token","state","auth","fetchContacts","fetchedContacts","handleAddContact","newContactData","addedContact","addContact","updatedContacts","console","error","children","onAddContact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/GoIT/Zad dom/goit-react-hw-08-phonebook/src/components/Contacts/Contacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport myAPI from '../myAPI/myAPI';\r\n\r\nfunction Contacts() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      if (token) {\r\n        const fetchedContacts = await myAPI.fetchContacts(token);\r\n        setContacts(fetchedContacts);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, [token]);\r\n\r\n  const handleAddContact = async newContactData => {\r\n    if (token) {\r\n      try {\r\n        const addedContact = await myAPI.addContact(newContactData, token);\r\n        if (addedContact) {\r\n          // Fetch the updated list of contacts after successfully adding a new contact\r\n          const updatedContacts = await myAPI.fetchContacts(token);\r\n          setContacts(updatedContacts);\r\n        } else {\r\n          // Handle the case where contact wasn't successfully added\r\n          console.error('Error: Contact was not added');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding contact:', error);\r\n        // Handle the error appropriately\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm onAddContact={handleAddContact} />\r\n      <ContactList contacts={contacts} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAEpDX,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIH,KAAK,EAAE;QACT,MAAMI,eAAe,GAAG,MAAMX,KAAK,CAACU,aAAa,CAACH,KAAK,CAAC;QACxDD,WAAW,CAACK,eAAe,CAAC;MAC9B;IACF,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMK,gBAAgB,GAAG,MAAMC,cAAc,IAAI;IAC/C,IAAIN,KAAK,EAAE;MACT,IAAI;QACF,MAAMO,YAAY,GAAG,MAAMd,KAAK,CAACe,UAAU,CAACF,cAAc,EAAEN,KAAK,CAAC;QAClE,IAAIO,YAAY,EAAE;UAChB;UACA,MAAME,eAAe,GAAG,MAAMhB,KAAK,CAACU,aAAa,CAACH,KAAK,CAAC;UACxDD,WAAW,CAACU,eAAe,CAAC;QAC9B,CAAC,MAAM;UACL;UACAC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF;IACF;EACF,CAAC;;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACJ,WAAW;MAACsB,YAAY,EAAER;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CtB,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACpB,EAAA,CAxCQD,QAAQ;EAAA,QAEDN,WAAW;AAAA;AAAA4B,EAAA,GAFlBtB,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}