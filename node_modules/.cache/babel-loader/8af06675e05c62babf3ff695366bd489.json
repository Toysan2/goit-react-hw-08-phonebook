{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"descendants\"];\nimport { MenuDescendantsProvider, MenuProvider, useMenu } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { omitThemingProps, useMultiStyleConfig, useTheme } from \"@chakra-ui/system\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"MenuStylesContext\",\n    errorMessage: \"useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Menu />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  MenuStylesProvider = _createContext2[0],\n  useMenuStyles = _createContext2[1];\nvar Menu = function Menu(props) {\n  var children = props.children;\n  var styles = useMultiStyleConfig(\"Menu\", props);\n  var ownProps = omitThemingProps(props);\n  var _useTheme = useTheme(),\n    direction = _useTheme.direction;\n  var _useMenu = useMenu(_objectSpread(_objectSpread({}, ownProps), {}, {\n      direction: direction\n    })),\n    descendants = _useMenu.descendants,\n    ctx = _objectWithoutProperties(_useMenu, _excluded);\n  var context = useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var isOpen = context.isOpen,\n    onClose = context.onClose,\n    forceUpdate = context.forceUpdate;\n  return /* @__PURE__ */jsx(MenuDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(MenuProvider, {\n      value: context,\n      children: /* @__PURE__ */jsx(MenuStylesProvider, {\n        value: styles,\n        children: runIfFn(children, {\n          isOpen: isOpen,\n          onClose: onClose,\n          forceUpdate: forceUpdate\n        })\n      })\n    })\n  });\n};\nMenu.displayName = \"Menu\";\nexport { useMenuStyles, Menu };","map":{"version":3,"mappings":";;;;;;;;;AAAA,SAASA,qBAAqB;AAC9B,SACEC,kBAGAC,qBACAC,gBACK;AACP,SAASC,eAAe;AACxB,SAASC,eAAe;AA+ChB;AAvCR,qBAA4CL,cAE1C;IACAM,yBAAM;IACNC;EACF,CAAC;EAAAC;EALMC;EAAoBC,aAAa;AAyBjC,IAAMC,OAA4B,SAA5BA,KAA6BC,OAAU;EAClD,IAAQC,WAAaD,MAAbC;EAER,IAAMC,SAASZ,oBAAoB,QAAQU,KAAK;EAChD,IAAMG,WAAWd,iBAAiBW,KAAK;EACvC,gBAAsBT,SAAS;IAAvBa;EACR,eAAgCC,wCAAaF;MAAUC;IAAA,EAAW;IAA1DE;IAAgBC;EACxB,IAAMC,UAAUf,QAAQ;IAAA,OAAMc;EAAA,GAAK,CAACA,GAAG,CAAC;EAExC,IAAQE,SAAiCD,QAAjCC;IAAQC,UAAyBF,QAAzBE;IAASC,cAAgBH,QAAhBG;EAEzB,OACE,mBAACC;IAAwBC,OAAOP;IAC9BL,6BAACa;MAAaD,OAAOL;MACnBP,6BAACJ;QAAmBgB,OAAOX;QACxBD,kBAAQA,UAAU;UAAEQ;UAAQC;UAASC;QAAY,CAAC;MAAA,CACrD;IAAA,CACF;EAAA,CACF;AAEJ;AAEAZ,KAAKgB,cAAc","names":["createContext","omitThemingProps","useMultiStyleConfig","useTheme","runIfFn","useMemo","name","errorMessage","_createContext2","MenuStylesProvider","useMenuStyles","Menu","props","children","styles","ownProps","direction","useMenu","descendants","ctx","context","isOpen","onClose","forceUpdate","MenuDescendantsProvider","value","MenuProvider","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\menu\\src\\menu.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  UseMenuProps,\n} from \"./use-menu\"\n\nconst [MenuStylesProvider, useMenuStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `,\n})\n\nexport { useMenuStyles }\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n *\n * @see Docs https://chakra-ui.com/docs/components/menu\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <MenuStylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </MenuStylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nMenu.displayName = \"Menu\"\n"]},"metadata":{},"sourceType":"module"}