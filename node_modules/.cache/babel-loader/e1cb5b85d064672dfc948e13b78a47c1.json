{"ast":null,"code":"'use client';\n\n// src/table.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"className\", \"layout\"];\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"TableStylesContext\",\n    errorMessage: \"useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Table />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  TableStylesProvider = _createContext2[0],\n  useTableStyles = _createContext2[1];\nvar Table = forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    layout = _omitThemingProps.layout,\n    tableProps = _objectWithoutProperties(_omitThemingProps, _excluded);\n  return /* @__PURE__ */jsx(TableStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.table, _objectSpread({\n      ref: ref,\n      __css: _objectSpread({\n        tableLayout: layout\n      }, styles.table),\n      className: cx(\"chakra-table\", className)\n    }, tableProps))\n  });\n});\nTable.displayName = \"Table\";\nexport { useTableStyles, Table };","map":{"version":3,"mappings":";;;;;;;AAAA,SACEA,QACAC,YAEAC,kBAEAC,2BAEK;AACP,SAASC,UAAU;AACnB,SAASC,qBAAqB;AAgCxB;AA9BN,qBAA8CA,cAE5C;IACAC,0BAAM;IACNC;EACF,CAAC;EAAAC;EALMC;EAAqBC,cAAc;AAwBnC,IAAMC,QAAQV,WAAgC,UAACW,OAAOC,KAAQ;EACnE,IAAMC,SAASX,oBAAoB,SAASS,KAAK;EACjD,wBAA6CV,iBAAiBU,KAAK;IAA3DG;IAAWC;IAAWC;EAE9B,OACE,mBAACR;IAAoBS,OAAOJ;IAC1BK,6BAACnB,OAAOoB;MACNP;MACAQ;QAASC,aAAaN;MAAA,GAAWF,OAAOM,MAAM;MAC9CL,WAAWX,GAAG,gBAAgBW,SAAS;IAAA,GACnCE,WACN;EAAA,CACF;AAEJ,CAAC;AAEDN,MAAMY,cAAc","names":["chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","createContext","name","errorMessage","_createContext2","TableStylesProvider","useTableStyles","Table","props","ref","styles","className","layout","tableProps","value","children","table","__css","tableLayout","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\table\\src\\table.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nconst [TableStylesProvider, useTableStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `,\n})\n\nexport { useTableStyles }\n\nexport interface TableOptions {\n  layout?: SystemStyleObject[\"tableLayout\"]\n}\n\nexport interface TableProps\n  extends HTMLChakraProps<\"table\">,\n    TableOptions,\n    ThemingProps<\"Table\"> {}\n\n/**\n * The `Table` component is used to organize and display data efficiently. It renders a `<table>` element by default.\n *\n * @see Docs https://chakra-ui.com/docs/components/table\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/table/\n */\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, layout, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <TableStylesProvider value={styles}>\n      <chakra.table\n        ref={ref}\n        __css={{ tableLayout: layout, ...styles.table }}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </TableStylesProvider>\n  )\n})\n\nTable.displayName = \"Table\"\n"]},"metadata":{},"sourceType":"module"}