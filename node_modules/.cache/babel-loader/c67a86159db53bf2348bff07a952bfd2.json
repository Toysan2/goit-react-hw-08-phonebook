{"ast":null,"code":"const API_BASE_URL = 'https://connections-api.herokuapp.com';\nconst myAPI = {\n  register: async userData => {\n    const response = await fetch(`${API_BASE_URL}/users/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return await response.json();\n  },\n  fetchContacts: async token => {\n    const response = await fetch(`${API_BASE_URL}/contacts`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return await response.json();\n  },\n  login: async credentials => {\n    const response = await fetch(`${API_BASE_URL}/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    return await response.json();\n  },\n  logout: async token => {\n    await fetch(`${API_BASE_URL}/users/logout`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    // Handle response or error as needed\n  },\n\n  addContact: async (contactData, token) => {\n    const response = await fetch(`${API_BASE_URL}/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(contactData)\n    });\n    return await response.json();\n  },\n  deleteContact: async (contactId, token) => {\n    await fetch(`${API_BASE_URL}/contacts/${contactId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    // Handle response or error as needed\n  }\n\n  // Additional methods as needed\n};\n\nexport default myAPI;","map":{"version":3,"names":["API_BASE_URL","myAPI","register","userData","response","fetch","method","headers","body","JSON","stringify","json","fetchContacts","token","Authorization","login","credentials","logout","addContact","contactData","deleteContact","contactId"],"sources":["E:/GoIT/Zad dom/goit-react-hw-08-phonebook/src/components/myAPI/myAPI.jsx"],"sourcesContent":["const API_BASE_URL = 'https://connections-api.herokuapp.com';\r\n\r\nconst myAPI = {\r\n  register: async userData => {\r\n    const response = await fetch(`${API_BASE_URL}/users/signup`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    return await response.json();\r\n  },\r\n\r\n  fetchContacts: async token => {\r\n    const response = await fetch(`${API_BASE_URL}/contacts`, {\r\n      method: 'GET',\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return await response.json();\r\n  },\r\n\r\n  login: async credentials => {\r\n    const response = await fetch(`${API_BASE_URL}/users/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    return await response.json();\r\n  },\r\n\r\n  logout: async token => {\r\n    await fetch(`${API_BASE_URL}/users/logout`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    // Handle response or error as needed\r\n  },\r\n\r\n  addContact: async (contactData, token) => {\r\n    const response = await fetch(`${API_BASE_URL}/contacts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(contactData),\r\n    });\r\n    return await response.json();\r\n  },\r\n\r\n  deleteContact: async (contactId, token) => {\r\n    await fetch(`${API_BASE_URL}/contacts/${contactId}`, {\r\n      method: 'DELETE',\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    // Handle response or error as needed\r\n  },\r\n\r\n  // Additional methods as needed\r\n};\r\n\r\nexport default myAPI;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uCAAuC;AAE5D,MAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,MAAMC,QAAQ,IAAI;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,eAAc,EAAE;MAC3DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDC,aAAa,EAAE,MAAMC,KAAK,IAAI;IAC5B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,WAAU,EAAE;MACvDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEO,aAAa,EAAG,UAASD,KAAM;MAAE;IAC9C,CAAC,CAAC;IACF,OAAO,MAAMT,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDI,KAAK,EAAE,MAAMC,WAAW,IAAI;IAC1B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,cAAa,EAAE;MAC1DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,WAAW;IAClC,CAAC,CAAC;IACF,OAAO,MAAMZ,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDM,MAAM,EAAE,MAAMJ,KAAK,IAAI;IACrB,MAAMR,KAAK,CAAE,GAAEL,YAAa,eAAc,EAAE;MAC1CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPO,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC;IACF;EACF,CAAC;;EAEDK,UAAU,EAAE,MAAAA,CAAOC,WAAW,EAAEN,KAAK,KAAK;IACxC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,WAAU,EAAE;MACvDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCO,aAAa,EAAG,UAASD,KAAM;MACjC,CAAC;MACDL,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACS,WAAW;IAClC,CAAC,CAAC;IACF,OAAO,MAAMf,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC;EAEDS,aAAa,EAAE,MAAAA,CAAOC,SAAS,EAAER,KAAK,KAAK;IACzC,MAAMR,KAAK,CAAE,GAAEL,YAAa,aAAYqB,SAAU,EAAC,EAAE;MACnDf,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QAAEO,aAAa,EAAG,UAASD,KAAM;MAAE;IAC9C,CAAC,CAAC;IACF;EACF;;EAEA;AACF,CAAC;;AAED,eAAeZ,KAAK"},"metadata":{},"sourceType":"module"}