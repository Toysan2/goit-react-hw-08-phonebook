{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useEffect } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalBody = forwardRef(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    bodyId = _useModalContext.bodyId,\n    setBodyMounted = _useModalContext.setBodyMounted;\n  useEffect(function () {\n    setBodyMounted(true);\n    return function () {\n      return setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n  var _className = cx(\"chakra-modal__body\", className);\n  var styles = useModalStyles();\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    className: _className,\n    id: bodyId\n  }, rest), {}, {\n    __css: styles.body\n  }));\n});\nModalBody.displayName = \"ModalBody\";\nexport { ModalBody };","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,UAAU;AACnB,SAA0BC,QAAQC,kBAAkB;AACpD,SAASC,iBAAiB;AA8BtB;AAjBG,IAAMC,YAAYF,WAAkC,UAACG,OAAOC,KAAQ;EACzE,IAAQC,YAAuBF,MAAvBE;IAAcC,gCAASH;EAC/B,uBAAmCI,gBAAgB;IAA3CC;IAAQC;EAMhBR,UAAU,YAAM;IACdQ,eAAe,IAAI;IACnB,OAAO;MAAA,OAAMA,eAAe,KAAK;IAAA;EACnC,GAAG,CAACA,cAAc,CAAC;EAEnB,IAAMC,aAAaZ,GAAG,sBAAsBO,SAAS;EACrD,IAAMM,SAASC,eAAe;EAE9B,OACE,mBAACb,OAAOc;IACNT;IACAC,WAAWK;IACXI,IAAIN;EAAA,GACAF;IACJS,OAAOJ,OAAOK;EAAA,EAChB;AAEJ,CAAC;AAEDd,UAAUe,cAAc","names":["cx","chakra","forwardRef","useEffect","ModalBody","props","ref","className","rest","useModalContext","bodyId","setBodyMounted","_className","styles","useModalStyles","div","id","__css","body","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\modal\\src\\modal-body.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useEffect } from \"react\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport interface ModalBodyProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * ModalBody\n *\n * React component that houses the main content of the modal.\n *\n * @see Docs https://chakra-ui.com/modal\n */\nexport const ModalBody = forwardRef<ModalBodyProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n  const { bodyId, setBodyMounted } = useModalContext()\n\n  /**\n   * Notify us if this component was rendered or used,\n   * so we can append `aria-describedby` automatically\n   */\n  useEffect(() => {\n    setBodyMounted(true)\n    return () => setBodyMounted(false)\n  }, [setBodyMounted])\n\n  const _className = cx(\"chakra-modal__body\", className)\n  const styles = useModalStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={_className}\n      id={bodyId}\n      {...rest}\n      __css={styles.body}\n    />\n  )\n})\n\nModalBody.displayName = \"ModalBody\"\n"]},"metadata":{},"sourceType":"module"}