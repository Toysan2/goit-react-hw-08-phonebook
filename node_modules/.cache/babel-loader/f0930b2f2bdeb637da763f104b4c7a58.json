{"ast":null,"code":"'use client';\n\n// src/list.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"children\", \"styleType\", \"stylePosition\", \"spacing\"],\n  _excluded2 = [\"as\"],\n  _excluded3 = [\"as\"];\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"ListStylesContext\",\n    errorMessage: \"useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<List />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  ListStylesProvider = _createContext2[0],\n  useListStyles = _createContext2[1];\nvar List = forwardRef(function List2(props, ref) {\n  var styles = useMultiStyleConfig(\"List\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    children = _omitThemingProps.children,\n    _omitThemingProps$sty = _omitThemingProps.styleType,\n    styleType = _omitThemingProps$sty === void 0 ? \"none\" : _omitThemingProps$sty,\n    stylePosition = _omitThemingProps.stylePosition,\n    spacing = _omitThemingProps.spacing,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var validChildren = getValidChildren(children);\n  var selector = \"& > *:not(style) ~ *:not(style)\";\n  var spacingStyle = spacing ? _defineProperty({}, selector, {\n    mt: spacing\n  }) : {};\n  return /* @__PURE__ */jsx(ListStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(chakra.ul, _objectSpread(_objectSpread({\n      ref: ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: _objectSpread(_objectSpread({}, styles.container), spacingStyle)\n    }, rest), {}, {\n      children: validChildren\n    }))\n  });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef(function (props, ref) {\n  var as = props.as,\n    rest = _objectWithoutProperties(props, _excluded2);\n  return /* @__PURE__ */jsx(List, _objectSpread({\n    ref: ref,\n    as: \"ol\",\n    styleType: \"decimal\",\n    marginStart: \"1em\"\n  }, rest));\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  var as = props.as,\n    rest = _objectWithoutProperties(props, _excluded3);\n  return /* @__PURE__ */jsx(List, _objectSpread({\n    ref: ref,\n    as: \"ul\",\n    styleType: \"initial\",\n    marginStart: \"1em\"\n  }, rest));\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  var styles = useListStyles();\n  return /* @__PURE__ */jsx(chakra.li, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    __css: styles.item\n  }));\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  var styles = useListStyles();\n  return /* @__PURE__ */jsx(Icon, _objectSpread(_objectSpread({\n    ref: ref,\n    role: \"presentation\"\n  }, props), {}, {\n    __css: styles.icon\n  }));\n});\nListIcon.displayName = \"ListIcon\";\nexport { useListStyles, List, OrderedList, UnorderedList, ListItem, ListIcon };","map":{"version":3,"mappings":";;;;;;;;;;AAAA,SAASA,YAAuB;AAChC,SAASC,qBAAqB;AAC9B,SAASC,wBAAwB;AAMjC,SACEC,QACAC,YACAC,kBAEAC,2BACK;AAyDD;AAvDN,qBAA4CL,cAE1C;IACAM,yBAAM;IACNC;EACF,CAAC;EAAAC;EALMC;EAAoBC,aAAa;AAqCjC,IAAMC,OAAOR,WAA4B,SAASQ,MAAKC,OAAOC,KAAK;EACxE,IAAMC,SAAST,oBAAoB,QAAQO,KAAK;EAChD,wBAMIR,iBAAiBQ,KAAK;IALxBG;IAAAC,0CACAC;IAAAA,+CAAY;IACZC;IACAC;IACGC;EAGL,IAAMC,gBAAgBpB,iBAAiBc,QAAQ;EAE/C,IAAMO,WAAW;EAEjB,IAAMC,eAAeJ,8BAAaG,QAAQ,EAAG;IAAEE,IAAIL;EAAQ,KAAM,CAAC;EAElE,OACE,mBAACV;IAAmBgB,OAAOX;IACzBC,6BAACb,OAAOwB;MACNb;MACAc,eAAeV;MACfW,mBAAmBV;MAKnBW,MAAK;MACLC,uCAAYhB,OAAOiB,YAAcR;IAAa,GAC1CH;MAEHL;IAAA,EACH;EAAA,CACF;AAEJ,CAAC;AAEDJ,KAAKqB,cAAc;AAEZ,IAAMC,cAAc9B,WAA4B,UAACS,OAAOC,KAAQ;EACrE,IAAQqB,KAAgBtB,MAAhBsB;IAAOd,gCAASR;EACxB,OACE,mBAACD;IAAKE;IAAUqB,IAAG;IAAKjB,WAAU;IAAUkB,aAAY;EAAA,GAAUf,KAAM;AAE5E,CAAC;AAEDa,YAAYD,cAAc;AAEnB,IAAMI,gBAAgBjC,WAA4B,SAASiC,eAChExB,OACAC,KACA;EACA,IAAQqB,KAAgBtB,MAAhBsB;IAAOd,gCAASR;EACxB,OACE,mBAACD;IAAKE;IAAUqB,IAAG;IAAKjB,WAAU;IAAUkB,aAAY;EAAA,GAAUf,KAAM;AAE5E,CAAC;AAEDgB,cAAcJ,cAAc;AASrB,IAAMK,WAAWlC,WAAgC,SAASkC,UAC/DzB,OACAC,KACA;EACA,IAAMC,SAASJ,cAAc;EAE7B,OAAO,mBAACR,OAAOoC;IAAGzB;EAAA,GAAcD;IAAOkB,OAAOhB,OAAOyB;EAAA,EAAM;AAC7D,CAAC;AAEDF,SAASL,cAAc;AAOhB,IAAMQ,WAAWrC,WAA6B,SAASqC,UAC5D5B,OACAC,KACA;EACA,IAAMC,SAASJ,cAAc;EAE7B,OAAO,mBAACX;IAAKc;IAAUgB,MAAK;EAAA,GAAmBjB;IAAOkB,OAAOhB,OAAO2B;EAAA,EAAM;AAC5E,CAAC;AAEDD,SAASR,cAAc","names":["Icon","createContext","getValidChildren","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","name","errorMessage","_createContext2","ListStylesProvider","useListStyles","List","props","ref","styles","children","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","validChildren","selector","spacingStyle","mt","value","ul","listStyleType","listStylePosition","role","__css","container","displayName","OrderedList","as","marginStart","UnorderedList","ListItem","li","item","ListIcon","icon"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\list.tsx"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n"]},"metadata":{},"sourceType":"module"}