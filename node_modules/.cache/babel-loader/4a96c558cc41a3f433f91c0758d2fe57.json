{"ast":null,"code":"'use client';\n\n// src/link-box.tsx\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"isExternal\", \"target\", \"rel\", \"className\"],\n  _excluded2 = [\"className\"];\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(function LinkOverlay2(props, ref) {\n  var isExternal = props.isExternal,\n    target = props.target,\n    rel = props.rel,\n    className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  return /* @__PURE__ */jsx(chakra.a, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    className: cx(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  }));\n});\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  var className = props.className,\n    rest = _objectWithoutProperties(props, _excluded2);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    position: \"relative\"\n  }, rest), {}, {\n    className: cx(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  }));\n});\nexport { LinkOverlay, LinkBox };","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,QAAQC,kBAAmC;AACpD,SAASC,UAAU;AAeb;AAJC,IAAMC,cAAcF,WACzB,SAASE,aAAYC,OAAOC,KAAK;EAC/B,IAAQC,aAAgDF,MAAhDE;IAAYC,SAAoCH,MAApCG;IAAQC,MAA4BJ,MAA5BI;IAAKC,YAAuBL,MAAvBK;IAAcC,gCAASN;EACxD,OACE,mBAACJ,OAAOW,mCACFD;IACJL;IACAI,WAAWP,GAAG,2BAA2BO,SAAS;IAClDD,KAAKF,aAAa,wBAAwBE;IAC1CD,QAAQD,aAAa,WAAWC;IAChCK,OAAO;MACLC,UAAU;MACV,aAAa;QACXC,SAAS;QACTC,QAAQ;QACRC,SAAS;QACTH,UAAU;QACVI,KAAK;QACLC,MAAM;QACNC,QAAQ;QACRC,OAAO;QACPC,QAAQ;MACV;IACF;EAAA,EACF;AAEJ,CACF;AAUO,IAAMC,UAAUrB,WAAgC,SAASqB,SAC9DlB,OACAC,KACA;EACA,IAAQI,YAAuBL,MAAvBK;IAAcC,gCAASN;EAE/B,OACE,mBAACJ,OAAOuB;IACNlB;IACAQ,UAAS;EAAA,GACLH;IACJD,WAAWP,GAAG,kBAAkBO,SAAS;IACzCG,OAAO;MAAA;MAEL,sDAAsD;QACpDC,UAAU;QACVM,QAAQ;MACV;IACF;EAAA,EACF;AAEJ,CAAC","names":["chakra","forwardRef","cx","LinkOverlay","props","ref","isExternal","target","rel","className","rest","a","__css","position","content","cursor","display","top","left","zIndex","width","height","LinkBox","div"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\layout\\src\\link-box.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">(\n  function LinkOverlay(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props\n    return (\n      <chakra.a\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-linkbox__overlay\", className)}\n        rel={isExternal ? \"noopener noreferrer\" : rel}\n        target={isExternal ? \"_blank\" : target}\n        __css={{\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\",\n          },\n        }}\n      />\n    )\n  },\n)\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">(function LinkBox(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"]},"metadata":{},"sourceType":"module"}