{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"containerRef\"];\nimport { usePortalManager } from \"./chunk-HK66PB7M.mjs\";\n\n// src/portal.tsx\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { createPortal } from \"react-dom\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    strict: false,\n    name: \"PortalContext\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  PortalContextProvider = _createContext2[0],\n  usePortalContext = _createContext2[1];\nvar PORTAL_CLASSNAME = \"chakra-portal\";\nvar PORTAL_SELECTOR = \".chakra-portal\";\nvar Container = function Container(props) {\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"chakra-portal-zIndex\",\n    style: {\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    },\n\n    children: props.children\n  });\n};\nvar DefaultPortal = function DefaultPortal(props) {\n  var appendToParentPortal = props.appendToParentPortal,\n    children = props.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    tempNode = _useState2[0],\n    setTempNode = _useState2[1];\n  var portal = useRef(null);\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forceUpdate = _useState4[1];\n  useEffect(function () {\n    return forceUpdate({});\n  }, []);\n  var parentPortal = usePortalContext();\n  var manager = usePortalManager();\n  useSafeLayoutEffect(function () {\n    if (!tempNode) return;\n    var doc = tempNode.ownerDocument;\n    var host = appendToParentPortal ? parentPortal != null ? parentPortal : doc.body : doc.body;\n    if (!host) return;\n    portal.current = doc.createElement(\"div\");\n    portal.current.className = PORTAL_CLASSNAME;\n    host.appendChild(portal.current);\n    forceUpdate({});\n    var portalNode = portal.current;\n    return function () {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode);\n      }\n    };\n  }, [tempNode]);\n  var _children = (manager == null ? void 0 : manager.zIndex) ? /* @__PURE__ */jsx(Container, {\n    zIndex: manager == null ? void 0 : manager.zIndex,\n    children: children\n  }) : children;\n  return portal.current ? createPortal( /* @__PURE__ */jsx(PortalContextProvider, {\n    value: portal.current,\n    children: _children\n  }), portal.current) : /* @__PURE__ */jsx(\"span\", {\n    ref: function ref(el) {\n      if (el) setTempNode(el);\n    }\n  });\n};\nvar ContainerPortal = function ContainerPortal(props) {\n  var children = props.children,\n    containerRef = props.containerRef,\n    appendToParentPortal = props.appendToParentPortal;\n  var containerEl = containerRef.current;\n  var host = containerEl != null ? containerEl : typeof window !== \"undefined\" ? document.body : void 0;\n  var portal = useMemo(function () {\n    var node = containerEl == null ? void 0 : containerEl.ownerDocument.createElement(\"div\");\n    if (node) node.className = PORTAL_CLASSNAME;\n    return node;\n  }, [containerEl]);\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    forceUpdate = _useState6[1];\n  useSafeLayoutEffect(function () {\n    return forceUpdate({});\n  }, []);\n  useSafeLayoutEffect(function () {\n    if (!portal || !host) return;\n    host.appendChild(portal);\n    return function () {\n      host.removeChild(portal);\n    };\n  }, [portal, host]);\n  if (host && portal) {\n    return createPortal( /* @__PURE__ */jsx(PortalContextProvider, {\n      value: appendToParentPortal ? portal : null,\n      children: children\n    }), portal);\n  }\n  return null;\n};\nfunction Portal(props) {\n  var portalProps = _objectSpread({\n    appendToParentPortal: true\n  }, props);\n  var containerRef = portalProps.containerRef,\n    rest = _objectWithoutProperties(portalProps, _excluded);\n  return containerRef ? /* @__PURE__ */jsx(ContainerPortal, _objectSpread({\n    containerRef: containerRef\n  }, rest)) : /* @__PURE__ */jsx(DefaultPortal, _objectSpread({}, rest));\n}\nPortal.className = PORTAL_CLASSNAME;\nPortal.selector = PORTAL_SELECTOR;\nPortal.displayName = \"Portal\";\nexport { Portal };","map":{"version":3,"mappings":"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","names":["useSafeLayoutEffect","createContext","createPortal","useEffect","useMemo","useRef","useState","strict","name","_createContext2","PortalContextProvider","usePortalContext","PORTAL_CLASSNAME","PORTAL_SELECTOR","Container","props","className","style","position","zIndex","top","left","right","children","DefaultPortal","appendToParentPortal","_useState2","tempNode","setTempNode","portal","_useState4","forceUpdate","parentPortal","manager","usePortalManager","doc","ownerDocument","host","body","current","createElement","appendChild","portalNode","contains","removeChild","_children","value","ref","el","ContainerPortal","containerRef","containerEl","window","document","node","_useState6","Portal","portalProps","rest","selector","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\portal\\src\\portal.tsx"],"sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst PORTAL_CLASSNAME = \"chakra-portal\"\nconst PORTAL_SELECTOR = `.chakra-portal`\n\nconst Container = (props: React.PropsWithChildren<{ zIndex: number }>) => (\n  <div\n    className=\"chakra-portal-zIndex\"\n    style={{\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0,\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    }}\n  >\n    {props.children}\n  </div>\n)\n\n/**\n * Portal that uses `document.body` as container\n */\nconst DefaultPortal = (\n  props: React.PropsWithChildren<{ appendToParentPortal?: boolean }>,\n) => {\n  const { appendToParentPortal, children } = props\n\n  const [tempNode, setTempNode] = useState<HTMLElement | null>(null)\n  const portal = useRef<HTMLDivElement | null>(null)\n\n  const [, forceUpdate] = useState({})\n  useEffect(() => forceUpdate({}), [])\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode) return\n\n    const doc = tempNode.ownerDocument\n    const host = appendToParentPortal ? parentPortal ?? doc.body : doc.body\n\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = PORTAL_CLASSNAME\n\n    host.appendChild(portal.current)\n    forceUpdate({})\n\n    const portalNode = portal.current\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [tempNode])\n\n  const _children = manager?.zIndex ? (\n    <Container zIndex={manager?.zIndex}>{children}</Container>\n  ) : (\n    children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {_children}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span\n      ref={(el) => {\n        if (el) setTempNode(el)\n      }}\n    />\n  )\n}\n\ninterface ContainerPortalProps extends React.PropsWithChildren<{}> {\n  containerRef: React.RefObject<HTMLElement | null>\n  /**\n   * @default false\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal that uses a custom container\n */\nconst ContainerPortal = (props: ContainerPortalProps) => {\n  const { children, containerRef, appendToParentPortal } = props\n  const containerEl = containerRef.current\n  const host =\n    containerEl ?? (typeof window !== \"undefined\" ? document.body : undefined)\n\n  const portal = useMemo(() => {\n    const node = containerEl?.ownerDocument.createElement(\"div\")\n    if (node) node.className = PORTAL_CLASSNAME\n    return node\n  }, [containerEl])\n\n  const [, forceUpdate] = useState({})\n  useSafeLayoutEffect(() => forceUpdate({}), [])\n\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return\n    host.appendChild(portal)\n    return () => {\n      host.removeChild(portal)\n    }\n  }, [portal, host])\n\n  if (host && portal) {\n    return createPortal(\n      <PortalContextProvider value={appendToParentPortal ? portal : null}>\n        {children}\n      </PortalContextProvider>,\n      portal,\n    )\n  }\n\n  return null\n}\n\nexport interface PortalProps {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   *\n   * @default true\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const portalProps: PortalProps = {\n    appendToParentPortal: true,\n    ...props,\n  }\n\n  const { containerRef, ...rest } = portalProps\n  return containerRef ? (\n    <ContainerPortal containerRef={containerRef} {...rest} />\n  ) : (\n    <DefaultPortal {...rest} />\n  )\n}\n\nPortal.className = PORTAL_CLASSNAME\nPortal.selector = PORTAL_SELECTOR\n\nPortal.displayName = \"Portal\"\n"]},"metadata":{},"sourceType":"module"}