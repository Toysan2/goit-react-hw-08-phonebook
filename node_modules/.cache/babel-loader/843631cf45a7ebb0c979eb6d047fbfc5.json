{"ast":null,"code":"// src/utils/run-if-fn.ts\nvar isFunction = function isFunction(value) {\n  return typeof value === \"function\";\n};\nfunction runIfFn(valueOrFn) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return isFunction(valueOrFn) ? valueOrFn.apply(void 0, args) : valueOrFn;\n}\nexport { runIfFn };","map":{"version":3,"mappings":";AAAA,IAAMA,aAAa,SAAbA,WAAcC;EAAA,OAClB,OAAOA,UAAU;AAAA;AAEZ,SAASC,QACdC,WAEG;EAAA,kCADAC;IAAAA;EAAA;EAEH,OAAOJ,WAAWG,SAAS,IAAIA,wBAAaC,IAAI,IAAID;AACtD","names":["isFunction","value","runIfFn","valueOrFn","args"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\theme\\src\\utils\\run-if-fn.ts"],"sourcesContent":["const isFunction = (value: any): value is Function =>\n  typeof value === \"function\"\n\nexport function runIfFn<T, U>(\n  valueOrFn: T | ((...fnArgs: U[]) => T),\n  ...args: U[]\n): T {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn\n}\n"]},"metadata":{},"sourceType":"module"}