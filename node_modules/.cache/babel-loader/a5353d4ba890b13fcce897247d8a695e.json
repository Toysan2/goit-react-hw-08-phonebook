{"ast":null,"code":"'use client';\n\nimport { usePointerEvent } from \"./chunk-ZCYNKCF5.mjs\";\n\n// src/use-focus-on-pointerdown.ts\nimport { contains, detectBrowser, focus, getOwnerDocument, isActiveElement, isRefObject } from \"@chakra-ui/utils\";\nfunction useFocusOnPointerDown(props) {\n  var ref = props.ref,\n    elements = props.elements,\n    enabled = props.enabled;\n  var isSafari = detectBrowser(\"Safari\");\n  var doc = function doc() {\n    return getOwnerDocument(ref.current);\n  };\n  usePointerEvent(doc, \"pointerdown\", function (event) {\n    if (!isSafari || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\nexport { useFocusOnPointerDown };","map":{"version":3,"mappings":";;;;;AAAA,SACEA,UACAC,eACAC,OACAC,kBACAC,iBACAC,mBACK;AAkBA,SAASC,sBAAsBC,OAAiC;EACrE,IAAQC,MAA2BD,MAA3BC;IAAKC,WAAsBF,MAAtBE;IAAUC,UAAYH,MAAZG;EAEvB,IAAMC,WAAWV,cAAc,QAAQ;EACvC,IAAMW,MAAM,SAANA;IAAA,OAAYT,iBAAiBK,IAAIK,OAAO;EAAA;EAE9CC,gBAAgBF,KAAK,eAAe,UAACG,OAAU;IAC7C,IAAI,CAACJ,YAAY,CAACD,SAAS;IAC3B,IAAMM,SAASD,MAAMC;IAErB,IAAMC,MAAMR,8BAAY,CAACD,GAAG;IAC5B,IAAMU,gBAAgBD,IAAIE,KAAK,UAACC,cAAiB;MAC/C,IAAMC,KAAKhB,YAAYe,YAAY,IAAIA,aAAaP,UAAUO;MAC9D,OAAOpB,SAASqB,IAAIL,MAAM;IAC5B,CAAC;IAED,IAAI,CAACZ,gBAAgBY,MAAM,KAAKE,eAAe;MAC7CH,MAAMO,eAAe;MACrBpB,MAAMc,MAAM;IACd;EACF,CAAC;AACH","names":["contains","detectBrowser","focus","getOwnerDocument","isActiveElement","isRefObject","useFocusOnPointerDown","props","ref","elements","enabled","isSafari","doc","current","usePointerEvent","event","target","els","isValidTarget","some","elementOrRef","el","preventDefault"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\hooks\\src\\use-focus-on-pointerdown.ts"],"sourcesContent":["import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}