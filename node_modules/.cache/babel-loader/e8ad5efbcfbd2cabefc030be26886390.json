{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"E:/GoIT/Zad dom/goit-react-hw-08-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"in\", \"unmountOnExit\", \"animateOpacity\", \"startingHeight\", \"endingHeight\", \"style\", \"className\", \"transition\", \"transitionEnd\"];\nimport { TRANSITION_EASINGS, withDelay } from \"./chunk-6NHXDBFO.mjs\";\n\n// src/collapse.tsx\nimport { cx, warn } from \"@chakra-ui/shared-utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar isNumeric = function isNumeric(value) {\n  return value != null && parseInt(value.toString(), 10) > 0;\n};\nvar defaultTransitions = {\n  exit: {\n    height: {\n      duration: 0.2,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    }\n  },\n  enter: {\n    height: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.4,\n      ease: TRANSITION_EASINGS.ease\n    }\n  }\n};\nvar variants = {\n  exit: function exit(_ref) {\n    var animateOpacity = _ref.animateOpacity,\n      startingHeight = _ref.startingHeight,\n      transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      delay = _ref.delay;\n    var _a;\n    return _objectSpread(_objectSpread({}, animateOpacity && {\n      opacity: isNumeric(startingHeight) ? 1 : 0\n    }), {}, {\n      height: startingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransitions.exit, delay)\n    });\n  },\n  enter: function enter(_ref2) {\n    var animateOpacity = _ref2.animateOpacity,\n      endingHeight = _ref2.endingHeight,\n      transition = _ref2.transition,\n      transitionEnd = _ref2.transitionEnd,\n      delay = _ref2.delay;\n    var _a;\n    return _objectSpread(_objectSpread({}, animateOpacity && {\n      opacity: 1\n    }), {}, {\n      height: endingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransitions.enter, delay)\n    });\n  }\n};\nvar Collapse = forwardRef(function (props, ref) {\n  var isOpen = props.in,\n    unmountOnExit = props.unmountOnExit,\n    _props$animateOpacity = props.animateOpacity,\n    animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity,\n    _props$startingHeight = props.startingHeight,\n    startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight,\n    _props$endingHeight = props.endingHeight,\n    endingHeight = _props$endingHeight === void 0 ? \"auto\" : _props$endingHeight,\n    style = props.style,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    mounted = _useState2[0],\n    setMounted = _useState2[1];\n  useEffect(function () {\n    var timeout = setTimeout(function () {\n      setMounted(true);\n    });\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, []);\n  warn({\n    condition: Number(startingHeight) > 0 && !!unmountOnExit,\n    message: \"startingHeight and unmountOnExit are mutually exclusive. You can't use them together\"\n  });\n  var hasStartingHeight = parseFloat(startingHeight.toString()) > 0;\n  var custom = {\n    startingHeight: startingHeight,\n    endingHeight: endingHeight,\n    animateOpacity: animateOpacity,\n    transition: !mounted ? {\n      enter: {\n        duration: 0\n      }\n    } : transition,\n    transitionEnd: {\n      enter: transitionEnd == null ? void 0 : transitionEnd.enter,\n      exit: unmountOnExit ? transitionEnd == null ? void 0 : transitionEnd.exit : _objectSpread(_objectSpread({}, transitionEnd == null ? void 0 : transitionEnd.exit), {}, {\n        display: hasStartingHeight ? \"block\" : \"none\"\n      })\n    }\n  };\n  var show = unmountOnExit ? isOpen : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    initial: false,\n    custom: custom,\n    children: show && /* @__PURE__ */jsx(motion.div, _objectSpread(_objectSpread({\n      ref: ref\n    }, rest), {}, {\n      className: cx(\"chakra-collapse\", className),\n      style: _objectSpread({\n        overflow: \"hidden\",\n        display: \"block\"\n      }, style),\n      custom: custom,\n      variants: variants,\n      initial: unmountOnExit ? \"exit\" : false,\n      animate: animate,\n      exit: \"exit\"\n    }))\n  });\n});\nCollapse.displayName = \"Collapse\";\nexport { Collapse };","map":{"version":3,"mappings":";;;;;;;;;AAAA,SAASA,IAAIC,YAAY;AACzB,SACEC,iBAEAC,cAEK;AACP,SAASC,YAAYC,WAAWC,gBAAgB;AAqItC;AA7HV,IAAMC,YAAY,SAAZA,UAAaC;EAAA,OACjBA,SAAS,QAAQC,SAASD,MAAME,SAAS,GAAG,EAAE,IAAI;AAAA;AAoBpD,IAAMC,qBAAqB;EACzBC,MAAM;IACJC,QAAQ;MAAEC,UAAU;MAAKC,MAAMC,mBAAmBD;IAAK;IACvDE,SAAS;MAAEH,UAAU;MAAKC,MAAMC,mBAAmBD;IAAK;EAC1D;EACAG,OAAO;IACLL,QAAQ;MAAEC,UAAU;MAAKC,MAAMC,mBAAmBD;IAAK;IACvDE,SAAS;MAAEH,UAAU;MAAKC,MAAMC,mBAAmBD;IAAK;EAC1D;AACF;AAEA,IAAMI,WAAsC;EAC1CP,MAAM,oBAMH;IAAA,IALDQ;MACAC;MACAC;MACAC;MACAC;IArDJ;IAsDS,uCACDJ,kBAAkB;MAAEH,SAASV,UAAUc,cAAc,IAAI,IAAI;IAAE;MACnER,QAAQQ;MACRE,eAAeA,+CAAeX;MAC9BU,aACEG,8CAAYb,SAAZ,YAAoBc,UAAUd,KAAKD,mBAAmBC,MAAMY,KAAK;IAAA;EACrE;EACAN,OAAO,sBAMJ;IAAA,IALDE;MACAO;MACAL;MACAC;MACAC;IAlEJ;IAmES,uCACDJ,kBAAkB;MAAEH,SAAS;IAAE;MACnCJ,QAAQc;MACRJ,eAAeA,+CAAeL;MAC9BI,aACEG,8CAAYP,UAAZ,YAAqBQ,UAAUR,MAAMP,mBAAmBO,OAAOM,KAAK;IAAA;EACxE;AACF;AAQO,IAAMI,WAAWxB,WACtB,UAACyB,OAAOC,KAAQ;EACd,IACMC,SAUFF,MAVFG;IACAC,gBASEJ,MATFI;IAAAC,wBASEL,MARFT;IAAAA,oDAAiB;IAAAe,wBAQfN,MAPFR;IAAAA,oDAAiB;IAAAe,sBAOfP,MANFF;IAAAA,gDAAe;IACfU,QAKER,MALFQ;IACAC,YAIET,MAJFS;IACAhB,aAGEO,MAHFP;IACAC,gBAEEM,MAFFN;IACGgB,gCACDV;EAEJ,gBAA8BvB,SAAS,KAAK;IAAAkC;IAArCC;IAASC,UAAU;EAC1BrC,UAAU,YAAM;IACd,IAAMsC,UAAUC,WAAW,YAAM;MAC/BF,WAAW,IAAI;IACjB,CAAC;IACD,OAAO;MAAA,OAAMG,aAAaF,OAAO;IAAA;EACnC,GAAG,EAAE;EAQL1C,KAAK;IACH6C,WAAWC,OAAO1B,cAAc,IAAI,KAAK,CAAC,CAACY;IAC3Ce;EACF,CAAC;EAED,IAAMC,oBAAoBC,WAAW7B,eAAeX,SAAS,CAAC,IAAI;EAElE,IAAMyC,SAAS;IACb9B;IACAM;IACAP;IACAE,YAAY,CAACmB,UAAU;MAAEvB,OAAO;QAAEJ,UAAU;MAAE;IAAE,IAAIQ;IACpDC,eAAe;MACbL,OAAOK,+CAAeL;MACtBN,MAAMqB,gBACFV,+CAAeX,uCAEVW,+CAAeX;QAClBwC,SAASH,oBAAoB,UAAU;MAAA;IAE/C;EACF;EAEA,IAAMI,OAAOpB,gBAAgBF,SAAS;EACtC,IAAMuB,UAAUvB,UAAUE,gBAAgB,UAAU;EAEpD,OACE,mBAAC/B;IAAgBqD,SAAS;IAAOJ;IAC9BK,kBACC,mBAACrD,OAAOsD;MACN3B;IAAA,GACIS;MACJD,WAAWtC,GAAG,mBAAmBsC,SAAS;MAC1CD;QACEqB,UAAU;QACVN,SAAS;MAAA,GACNf,MACL;MACAc;MACAhC;MACAoC,SAAStB,gBAAgB,SAAS;MAClCqB;MACA1C,MAAK;IAAA,EACP;EAAA,CAEJ;AAEJ,CACF;AAEAgB,SAAS+B,cAAc","names":["cx","warn","AnimatePresence","motion","forwardRef","useEffect","useState","isNumeric","value","parseInt","toString","defaultTransitions","exit","height","duration","ease","TRANSITION_EASINGS","opacity","enter","variants","animateOpacity","startingHeight","transition","transitionEnd","delay","_a","withDelay","endingHeight","Collapse","props","ref","isOpen","in","unmountOnExit","_props$animateOpacity","_props$startingHeight","_props$endingHeight","style","className","rest","_useState2","mounted","setMounted","timeout","setTimeout","clearTimeout","condition","Number","message","hasStartingHeight","parseFloat","custom","display","show","animate","initial","children","div","overflow","displayName"],"sources":["E:\\GoIT\\Zad dom\\goit-react-hw-08-phonebook\\node_modules\\@chakra-ui\\transition\\src\\collapse.tsx"],"sourcesContent":["import { cx, warn } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef, useEffect, useState } from \"react\"\nimport {\n  TRANSITION_EASINGS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nconst isNumeric = (value?: string | number) =>\n  value != null && parseInt(value.toString(), 10) > 0\n\nexport interface CollapseOptions {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number | string\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string\n}\n\nconst defaultTransitions = {\n  exit: {\n    height: { duration: 0.2, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n  },\n  enter: {\n    height: { duration: 0.3, ease: TRANSITION_EASINGS.ease },\n    opacity: { duration: 0.4, ease: TRANSITION_EASINGS.ease },\n  },\n}\n\nconst variants: Variants<CollapseOptions> = {\n  exit: ({\n    animateOpacity,\n    startingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: isNumeric(startingHeight) ? 1 : 0 }),\n    height: startingHeight,\n    transitionEnd: transitionEnd?.exit,\n    transition:\n      transition?.exit ?? withDelay.exit(defaultTransitions.exit, delay),\n  }),\n  enter: ({\n    animateOpacity,\n    endingHeight,\n    transition,\n    transitionEnd,\n    delay,\n  }) => ({\n    ...(animateOpacity && { opacity: 1 }),\n    height: endingHeight,\n    transitionEnd: transitionEnd?.enter,\n    transition:\n      transition?.enter ?? withDelay.enter(defaultTransitions.enter, delay),\n  }),\n}\n\nexport type ICollapse = CollapseProps\n\nexport interface CollapseProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    CollapseOptions {}\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      transition,\n      transitionEnd,\n      ...rest\n    } = props\n\n    const [mounted, setMounted] = useState(false)\n    useEffect(() => {\n      const timeout = setTimeout(() => {\n        setMounted(true)\n      })\n      return () => clearTimeout(timeout)\n    }, [])\n\n    /**\n     * Warn 🚨: `startingHeight` and `unmountOnExit` are mutually exclusive\n     *\n     * If you specify a starting height, the collapsed needs to be mounted\n     * for the height to take effect.\n     */\n    warn({\n      condition: Number(startingHeight) > 0 && !!unmountOnExit,\n      message: `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`,\n    })\n\n    const hasStartingHeight = parseFloat(startingHeight.toString()) > 0\n\n    const custom = {\n      startingHeight,\n      endingHeight,\n      animateOpacity,\n      transition: !mounted ? { enter: { duration: 0 } } : transition,\n      transitionEnd: {\n        enter: transitionEnd?.enter,\n        exit: unmountOnExit\n          ? transitionEnd?.exit\n          : {\n              ...transitionEnd?.exit,\n              display: hasStartingHeight ? \"block\" : \"none\",\n            },\n      },\n    }\n\n    const show = unmountOnExit ? isOpen : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    return (\n      <AnimatePresence initial={false} custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            {...rest}\n            className={cx(\"chakra-collapse\", className)}\n            style={{\n              overflow: \"hidden\",\n              display: \"block\",\n              ...style,\n            }}\n            custom={custom}\n            variants={variants as _Variants}\n            initial={unmountOnExit ? \"exit\" : false}\n            animate={animate}\n            exit=\"exit\"\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nCollapse.displayName = \"Collapse\"\n"]},"metadata":{},"sourceType":"module"}